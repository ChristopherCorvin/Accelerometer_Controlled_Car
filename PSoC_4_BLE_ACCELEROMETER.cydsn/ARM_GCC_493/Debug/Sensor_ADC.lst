ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Sensor_ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	Sensor_ADC_initVar
  18              		.bss
  19              		.type	Sensor_ADC_initVar, %object
  20              		.size	Sensor_ADC_initVar, 1
  21              	Sensor_ADC_initVar:
  22 0000 00       		.space	1
  23              		.comm	Sensor_ADC_offset,6,4
  24              		.comm	Sensor_ADC_countsPer10Volt,12,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	Sensor_ADC_channelsConfig, %object
  28              		.size	Sensor_ADC_channelsConfig, 12
  29              	Sensor_ADC_channelsConfig:
  30 0000 00040000 		.word	1024
  31 0004 00040000 		.word	1024
  32 0008 00040000 		.word	1024
  33              		.section	.text.Sensor_ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	Sensor_ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	Sensor_ADC_Start, %function
  39              	Sensor_ADC_Start:
  40              	.LFB2:
  41              		.file 1 ".\\Generated_Source\\PSoC4\\Sensor_ADC.c"
   1:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Sensor_ADC.c **** * File Name: Sensor_ADC.c
   3:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
   5:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
   9:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  11:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/Sensor_ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/Sensor_ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/Sensor_ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 2


  17:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  18:.\Generated_Source\PSoC4/Sensor_ADC.c **** #include "Sensor_ADC.h"
  19:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  20:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  21:.\Generated_Source\PSoC4/Sensor_ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/Sensor_ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/Sensor_ADC.c **** uint8 Sensor_ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/Sensor_ADC.c **** volatile int16 Sensor_ADC_offset[Sensor_ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/Sensor_ADC.c **** volatile int32 Sensor_ADC_countsPer10Volt[Sensor_ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  28:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  29:.\Generated_Source\PSoC4/Sensor_ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/Sensor_ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/Sensor_ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/Sensor_ADC.c **** static const uint32 CYCODE Sensor_ADC_channelsConfig[] = { 0x00000400u, 0x00000400u, 0x00000400u };
  34:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  35:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  36:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_Start
  38:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  40:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  45:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  48:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  51:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  The Sensor_ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sensor_ADC_Start() routine.
  57:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  to zero before call of Sensor_ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sensor_ADC_Init() and Sensor_ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sensor_ADC_Start() routine.
  61:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  62:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_Start(void)
  64:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /* If not Initialized then initialize all required hardware and software */
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 3


  66:.\Generated_Source\PSoC4/Sensor_ADC.c ****     if(Sensor_ADC_initVar == 0u)
  50              		.loc 1 66 0
  51 0004 064B     		ldr	r3, .L3
  52 0006 1B78     		ldrb	r3, [r3]
  53 0008 002B     		cmp	r3, #0
  54 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
  68:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_Init();
  55              		.loc 1 68 0
  56 000c FFF7FEFF 		bl	Sensor_ADC_Init
  69:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_initVar = 1u;
  57              		.loc 1 69 0
  58 0010 034B     		ldr	r3, .L3
  59 0012 0122     		mov	r2, #1
  60 0014 1A70     		strb	r2, [r3]
  61              	.L2:
  70:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
  71:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_Enable();
  62              		.loc 1 71 0
  63 0016 FFF7FEFF 		bl	Sensor_ADC_Enable
  72:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
  64              		.loc 1 72 0
  65 001a BD46     		mov	sp, r7
  66              		@ sp needed
  67 001c 80BD     		pop	{r7, pc}
  68              	.L4:
  69 001e C046     		.align	2
  70              	.L3:
  71 0020 00000000 		.word	Sensor_ADC_initVar
  72              		.cfi_endproc
  73              	.LFE2:
  74              		.size	Sensor_ADC_Start, .-Sensor_ADC_Start
  75              		.global	__aeabi_idiv
  76              		.section	.text.Sensor_ADC_Init,"ax",%progbits
  77              		.align	2
  78              		.global	Sensor_ADC_Init
  79              		.code	16
  80              		.thumb_func
  81              		.type	Sensor_ADC_Init, %function
  82              	Sensor_ADC_Init:
  83              	.LFB3:
  73:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  74:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
  75:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_Init
  77:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  79:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sensor_ADC_Start().
  83:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  84:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  87:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 4


  89:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  90:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  The Sensor_ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
  93:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_Init(void)
  95:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
  84              		.loc 1 95 0
  85              		.cfi_startproc
  86 0000 80B5     		push	{r7, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 84B0     		sub	sp, sp, #16
  91              		.cfi_def_cfa_offset 24
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/Sensor_ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/Sensor_ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/Sensor_ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 100:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/Sensor_ADC.c ****         static const uint8 CYCODE Sensor_ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 103:.\Generated_Source\PSoC4/Sensor_ADC.c ****             (uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/Sensor_ADC.c ****             (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/Sensor_ADC.c ****             ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/Sensor_ADC.c ****              (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 9u)
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 5


 136:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 ,(uint8)(Sensor_ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (uint8)Sensor_ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/Sensor_ADC.c ****         };
 168:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 170:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/Sensor_ADC.c ****         CyIntSetPriority(Sensor_ADC_INTC_NUMBER, Sensor_ADC_INTC_PRIOR_NUMBER);
  94              		.loc 1 172 0
  95 0006 0F20     		mov	r0, #15
  96 0008 0321     		mov	r1, #3
  97 000a FFF7FEFF 		bl	CyIntSetPriority
 173:.\Generated_Source\PSoC4/Sensor_ADC.c ****         (void)CyIntSetVector(Sensor_ADC_INTC_NUMBER, &Sensor_ADC_ISR);
  98              		.loc 1 173 0
  99 000e 654B     		ldr	r3, .L17
 100 0010 0F20     		mov	r0, #15
 101 0012 191C     		mov	r1, r3
 102 0014 FFF7FEFF 		bl	CyIntSetVector
 174:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif   /* End Sensor_ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 176:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_CHAN_EN_REG = Sensor_ADC_DEFAULT_EN_CHANNELS;
 103              		.loc 1 177 0
 104 0018 634B     		ldr	r3, .L17+4
 105 001a 0722     		mov	r2, #7
 106 001c 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_CTRL_REG |= Sensor_ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 6


 180:.\Generated_Source\PSoC4/Sensor_ADC.c ****         (((Sensor_ADC_PUMP_CTRL_REG & Sensor_ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 107              		.loc 1 180 0
 108 001e 634B     		ldr	r3, .L17+8
 109 0020 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_CTRL_REG |= Sensor_ADC_DEFAULT_CTRL_REG_CFG | 
 110              		.loc 1 178 0
 111 0022 002B     		cmp	r3, #0
 112 0024 01DA     		bge	.L6
 178:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_CTRL_REG |= Sensor_ADC_DEFAULT_CTRL_REG_CFG | 
 113              		.loc 1 178 0 is_stmt 0 discriminator 1
 114 0026 6249     		ldr	r1, .L17+12
 115 0028 00E0     		b	.L7
 116              	.L6:
 178:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_CTRL_REG |= Sensor_ADC_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 178 0 discriminator 2
 118 002a 6249     		ldr	r1, .L17+16
 119              	.L7:
 178:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_CTRL_REG |= Sensor_ADC_DEFAULT_CTRL_REG_CFG | 
 120              		.loc 1 178 0 discriminator 4
 121 002c 624B     		ldr	r3, .L17+20
 122 002e 624A     		ldr	r2, .L17+20
 123 0030 1268     		ldr	r2, [r2]
 124 0032 0A43     		orr	r2, r1
 125 0034 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_SAMPLE_CTRL_REG = Sensor_ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 126              		.loc 1 182 0 is_stmt 1 discriminator 4
 127 0036 614B     		ldr	r3, .L17+24
 128 0038 614A     		ldr	r2, .L17+28
 129 003a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_RANGE_THRES_REG = Sensor_ADC_DEFAULT_RANGE_THRES_REG_CFG;
 130              		.loc 1 183 0 discriminator 4
 131 003c 614B     		ldr	r3, .L17+32
 132 003e 624A     		ldr	r2, .L17+36
 133 0040 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_RANGE_COND_REG  = Sensor_ADC_COMPARE_MODE;
 134              		.loc 1 184 0 discriminator 4
 135 0042 624B     		ldr	r3, .L17+40
 136 0044 0022     		mov	r2, #0
 137 0046 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_SAMPLE_TIME01_REG = Sensor_ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 138              		.loc 1 185 0 discriminator 4
 139 0048 614B     		ldr	r3, .L17+44
 140 004a 624A     		ldr	r2, .L17+48
 141 004c 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_SAMPLE_TIME23_REG = Sensor_ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 142              		.loc 1 186 0 discriminator 4
 143 004e 624B     		ldr	r3, .L17+52
 144 0050 604A     		ldr	r2, .L17+48
 145 0052 1A60     		str	r2, [r3]
 187:.\Generated_Source\PSoC4/Sensor_ADC.c ****     
 188:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_MUX_SWITCH0_REG |= Sensor_ADC_DEFAULT_MUX_SWITCH0;
 146              		.loc 1 190 0 discriminator 4
 147 0054 614B     		ldr	r3, .L17+56
 148 0056 614A     		ldr	r2, .L17+56
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 7


 149 0058 1268     		ldr	r2, [r2]
 150 005a 8021     		mov	r1, #128
 151 005c 4902     		lsl	r1, r1, #9
 152 005e 0A43     		orr	r2, r1
 153 0060 1A60     		str	r2, [r3]
 191:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/Sensor_ADC.c ****             Sensor_ADC_MUX_SWITCH_HW_CTRL_REG |= Sensor_ADC_DEFAULT_MUX_SWITCH0;
 154              		.loc 1 193 0 discriminator 4
 155 0062 5F4B     		ldr	r3, .L17+60
 156 0064 5E4A     		ldr	r2, .L17+60
 157 0066 1268     		ldr	r2, [r2]
 158 0068 8021     		mov	r1, #128
 159 006a 4902     		lsl	r1, r1, #9
 160 006c 0A43     		orr	r2, r1
 161 006e 1A60     		str	r2, [r3]
 194:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* Sensor_ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif /*Sensor_ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 197:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 162              		.loc 1 197 0 discriminator 4
 163 0070 5C4B     		ldr	r3, .L17+64
 164 0072 0022     		mov	r2, #0
 165 0074 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 166              		.loc 1 198 0 discriminator 4
 167 0076 5C4B     		ldr	r3, .L17+68
 168 0078 0022     		mov	r2, #0
 169 007a 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_INTR_MASK_REG = Sensor_ADC_SAR_INTR_MASK;
 170              		.loc 1 199 0 discriminator 4
 171 007c 5B4B     		ldr	r3, .L17+72
 172 007e 0122     		mov	r2, #1
 173 0080 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 201:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_CY_SAR_IP_VER == Sensor_ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_ANA_TRIM_REG = Sensor_ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif /* (Sensor_ADC_CY_SAR_IP_VER == Sensor_ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 205:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/Sensor_ADC.c ****     tmpRegVal = Sensor_ADC_SAR_DFT_CTRL_REG;
 174              		.loc 1 206 0 discriminator 4
 175 0082 5B4B     		ldr	r3, .L17+76
 176 0084 1B68     		ldr	r3, [r3]
 177 0086 7B60     		str	r3, [r7, #4]
 207:.\Generated_Source\PSoC4/Sensor_ADC.c ****     tmpRegVal &= (uint32)~Sensor_ADC_DCEN;
 178              		.loc 1 207 0 discriminator 4
 179 0088 7B68     		ldr	r3, [r7, #4]
 180 008a 5A4A     		ldr	r2, .L17+80
 181 008c 1340     		and	r3, r2
 182 008e 7B60     		str	r3, [r7, #4]
 208:.\Generated_Source\PSoC4/Sensor_ADC.c ****     
 209:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_CY_SAR_IP_VER == Sensor_ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_NOMINAL_CLOCK_FREQ > (Sensor_ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/Sensor_ADC.c ****             tmpRegVal |= Sensor_ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/Sensor_ADC.c ****             tmpRegVal |= Sensor_ADC_DLY_INC;
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 8


 214:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #else
 216:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if ((Sensor_ADC_DEFAULT_VREF_SEL == Sensor_ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/Sensor_ADC.c ****              (Sensor_ADC_DEFAULT_VREF_SEL == Sensor_ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/Sensor_ADC.c ****             tmpRegVal |= Sensor_ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #else
 220:.\Generated_Source\PSoC4/Sensor_ADC.c ****             tmpRegVal |= Sensor_ADC_DCEN;
 183              		.loc 1 220 0 discriminator 4
 184 0090 7B68     		ldr	r3, [r7, #4]
 185 0092 8022     		mov	r2, #128
 186 0094 9205     		lsl	r2, r2, #22
 187 0096 1343     		orr	r3, r2
 188 0098 7B60     		str	r3, [r7, #4]
 221:.\Generated_Source\PSoC4/Sensor_ADC.c ****             tmpRegVal &= (uint32)~Sensor_ADC_DLY_INC;
 189              		.loc 1 221 0 discriminator 4
 190 009a 7B68     		ldr	r3, [r7, #4]
 191 009c 0122     		mov	r2, #1
 192 009e 9343     		bic	r3, r2
 193 00a0 7B60     		str	r3, [r7, #4]
 222:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* ((Sensor_ADC_DEFAULT_VREF_SEL == Sensor_ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/Sensor_ADC.c ****                    (Sensor_ADC_DEFAULT_VREF_SEL == Sensor_ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif /* (Sensor_ADC_CY_SAR_IP_VER == Sensor_ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/Sensor_ADC.c ****     
 226:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 194              		.loc 1 226 0 discriminator 4
 195 00a2 534B     		ldr	r3, .L17+76
 196 00a4 7A68     		ldr	r2, [r7, #4]
 197 00a6 1A60     		str	r2, [r3]
 227:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 228:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_MAX_RESOLUTION != Sensor_ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_WOUNDING_REG = Sensor_ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif /* Sensor_ADC_MAX_RESOLUTION != Sensor_ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 232:.\Generated_Source\PSoC4/Sensor_ADC.c ****     for(chNum = 0u; chNum < Sensor_ADC_TOTAL_CHANNELS_NUM; chNum++)
 198              		.loc 1 232 0 discriminator 4
 199 00a8 0023     		mov	r3, #0
 200 00aa FB60     		str	r3, [r7, #12]
 201 00ac 73E0     		b	.L8
 202              	.L16:
 233:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 234:.\Generated_Source\PSoC4/Sensor_ADC.c ****         tmpRegVal = (Sensor_ADC_channelsConfig[chNum] & Sensor_ADC_CHANNEL_CONFIG_MASK);
 203              		.loc 1 234 0
 204 00ae 524B     		ldr	r3, .L17+84
 205 00b0 FA68     		ldr	r2, [r7, #12]
 206 00b2 9200     		lsl	r2, r2, #2
 207 00b4 D258     		ldr	r2, [r2, r3]
 208 00b6 DC23     		mov	r3, #220
 209 00b8 9B01     		lsl	r3, r3, #6
 210 00ba 1340     		and	r3, r2
 211 00bc 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/Sensor_ADC.c ****             tmpRegVal |= Sensor_ADC_InputsPlacement[chNum];
 212              		.loc 1 236 0
 213 00be 4F4A     		ldr	r2, .L17+88
 214 00c0 FB68     		ldr	r3, [r7, #12]
 215 00c2 D318     		add	r3, r2, r3
 216 00c4 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 9


 217 00c6 1A1C     		mov	r2, r3
 218 00c8 7B68     		ldr	r3, [r7, #4]
 219 00ca 1343     		orr	r3, r2
 220 00cc 7B60     		str	r3, [r7, #4]
 237:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* End Sensor_ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/Sensor_ADC.c ****         
 239:.\Generated_Source\PSoC4/Sensor_ADC.c ****         
 240:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/Sensor_ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/Sensor_ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/Sensor_ADC.c ****         */
 244:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if((Sensor_ADC_MAX_RESOLUTION != Sensor_ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/Sensor_ADC.c ****             (Sensor_ADC_ALT_WOUNDING == Sensor_ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/Sensor_ADC.c ****             tmpRegVal &= (uint32)(~Sensor_ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* Sensor_ADC_MAX_RESOLUTION != Sensor_ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 249:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/Sensor_ADC.c ****         if(chNum < Sensor_ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* Sensor_ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 253:.\Generated_Source\PSoC4/Sensor_ADC.c ****             CY_SET_REG32((reg32 *)(Sensor_ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVa
 221              		.loc 1 253 0
 222 00ce FB68     		ldr	r3, [r7, #12]
 223 00d0 9B00     		lsl	r3, r3, #2
 224 00d2 4B4A     		ldr	r2, .L17+92
 225 00d4 9446     		mov	ip, r2
 226 00d6 6344     		add	r3, r3, ip
 227 00d8 7A68     		ldr	r2, [r7, #4]
 228 00da 1A60     		str	r2, [r3]
 254:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 255:.\Generated_Source\PSoC4/Sensor_ADC.c ****             if((Sensor_ADC_channelsConfig[chNum] & Sensor_ADC_IS_SATURATE_EN_MASK) != 0u)
 229              		.loc 1 255 0
 230 00dc 464B     		ldr	r3, .L17+84
 231 00de FA68     		ldr	r2, [r7, #12]
 232 00e0 9200     		lsl	r2, r2, #2
 233 00e2 D358     		ldr	r3, [r2, r3]
 234 00e4 0122     		mov	r2, #1
 235 00e6 1340     		and	r3, r2
 236 00e8 09D0     		beq	.L9
 256:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 257:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 Sensor_ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 237              		.loc 1 257 0
 238 00ea 3E4B     		ldr	r3, .L17+64
 239 00ec 3D4A     		ldr	r2, .L17+64
 240 00ee 1268     		ldr	r2, [r2]
 241 00f0 F968     		ldr	r1, [r7, #12]
 242 00f2 0120     		mov	r0, #1
 243 00f4 8840     		lsl	r0, r0, r1
 244 00f6 011C     		mov	r1, r0
 245 00f8 89B2     		uxth	r1, r1
 246 00fa 0A43     		orr	r2, r1
 247 00fc 1A60     		str	r2, [r3]
 248              	.L9:
 258:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }
 259:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 260:.\Generated_Source\PSoC4/Sensor_ADC.c ****             if((Sensor_ADC_channelsConfig[chNum] & Sensor_ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 249              		.loc 1 260 0
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 10


 250 00fe 3E4B     		ldr	r3, .L17+84
 251 0100 FA68     		ldr	r2, [r7, #12]
 252 0102 9200     		lsl	r2, r2, #2
 253 0104 D358     		ldr	r3, [r2, r3]
 254 0106 0222     		mov	r2, #2
 255 0108 1340     		and	r3, r2
 256 010a 09D0     		beq	.L10
 261:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 262:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 Sensor_ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 257              		.loc 1 262 0
 258 010c 364B     		ldr	r3, .L17+68
 259 010e 364A     		ldr	r2, .L17+68
 260 0110 1268     		ldr	r2, [r2]
 261 0112 F968     		ldr	r1, [r7, #12]
 262 0114 0120     		mov	r0, #1
 263 0116 8840     		lsl	r0, r0, r1
 264 0118 011C     		mov	r1, r0
 265 011a 89B2     		uxth	r1, r1
 266 011c 0A43     		orr	r2, r1
 267 011e 1A60     		str	r2, [r3]
 268              	.L10:
 263:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }
 264:.\Generated_Source\PSoC4/Sensor_ADC.c ****         }
 265:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/Sensor_ADC.c ****             else
 267:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 268:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 CY_SET_REG32(Sensor_ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | Sensor_ADC_INJ_TAILGAT
 269:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 270:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 if((Sensor_ADC_channelsConfig[chNum] & Sensor_ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 {
 272:.\Generated_Source\PSoC4/Sensor_ADC.c ****                     Sensor_ADC_SAR_INTR_MASK_REG |= Sensor_ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 }
 274:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 275:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 if((Sensor_ADC_channelsConfig[chNum] & Sensor_ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 {
 277:.\Generated_Source\PSoC4/Sensor_ADC.c ****                     Sensor_ADC_SAR_INTR_MASK_REG |= Sensor_ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 }
 279:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }
 280:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* Sensor_ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 282:.\Generated_Source\PSoC4/Sensor_ADC.c ****         if((Sensor_ADC_channelsConfig[chNum] & Sensor_ADC_ALT_RESOLUTION_ON) != 0u)
 269              		.loc 1 282 0
 270 0120 354B     		ldr	r3, .L17+84
 271 0122 FA68     		ldr	r2, [r7, #12]
 272 0124 9200     		lsl	r2, r2, #2
 273 0126 D258     		ldr	r2, [r2, r3]
 274 0128 8023     		mov	r3, #128
 275 012a 9B00     		lsl	r3, r3, #2
 276 012c 1340     		and	r3, r2
 277 012e 03D0     		beq	.L11
 283:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 284:.\Generated_Source\PSoC4/Sensor_ADC.c ****                counts = (int32)Sensor_ADC_DEFAULT_MAX_WRK_ALT;
 278              		.loc 1 284 0
 279 0130 8023     		mov	r3, #128
 280 0132 DB00     		lsl	r3, r3, #3
 281 0134 BB60     		str	r3, [r7, #8]
 282 0136 02E0     		b	.L12
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 11


 283              	.L11:
 285:.\Generated_Source\PSoC4/Sensor_ADC.c ****         }
 286:.\Generated_Source\PSoC4/Sensor_ADC.c ****         else
 287:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 288:.\Generated_Source\PSoC4/Sensor_ADC.c ****                counts = (int32)Sensor_ADC_SAR_WRK_MAX_12BIT;
 284              		.loc 1 288 0
 285 0138 8023     		mov	r3, #128
 286 013a 5B01     		lsl	r3, r3, #5
 287 013c BB60     		str	r3, [r7, #8]
 288              	.L12:
 289:.\Generated_Source\PSoC4/Sensor_ADC.c ****         }
 290:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 291:.\Generated_Source\PSoC4/Sensor_ADC.c ****         if((Sensor_ADC_channelsConfig[chNum] & Sensor_ADC_DIFFERENTIAL_EN) == 0u)
 289              		.loc 1 291 0
 290 013e 2E4B     		ldr	r3, .L17+84
 291 0140 FA68     		ldr	r2, [r7, #12]
 292 0142 9200     		lsl	r2, r2, #2
 293 0144 D258     		ldr	r2, [r2, r3]
 294 0146 8023     		mov	r3, #128
 295 0148 5B00     		lsl	r3, r3, #1
 296 014a 1340     		and	r3, r2
 297 014c 05D1     		bne	.L13
 292:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 293:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if((Sensor_ADC_DEFAULT_SE_RESULT_FORMAT_SEL == Sensor_ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 (Sensor_ADC_DEFAULT_NEG_INPUT_SEL == Sensor_ADC__VREF))
 295:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 Sensor_ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #else
 298:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 Sensor_ADC_offset[chNum] = 0;
 298              		.loc 1 298 0
 299 014e 2D4B     		ldr	r3, .L17+96
 300 0150 FA68     		ldr	r2, [r7, #12]
 301 0152 5200     		lsl	r2, r2, #1
 302 0154 0021     		mov	r1, #0
 303 0156 D152     		strh	r1, [r2, r3]
 304 0158 09E0     		b	.L14
 305              	.L13:
 299:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == Sensor_ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/Sensor_ADC.c ****         }
 301:.\Generated_Source\PSoC4/Sensor_ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 303:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #if(Sensor_ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == Sensor_ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 Sensor_ADC_offset[chNum] = (int16)(counts / 2);
 306              		.loc 1 305 0
 307 015a BB68     		ldr	r3, [r7, #8]
 308 015c 002B     		cmp	r3, #0
 309 015e 00DA     		bge	.L15
 310 0160 0133     		add	r3, r3, #1
 311              	.L15:
 312 0162 5B10     		asr	r3, r3, #1
 313 0164 99B2     		uxth	r1, r3
 314 0166 274B     		ldr	r3, .L17+96
 315 0168 FA68     		ldr	r2, [r7, #12]
 316 016a 5200     		lsl	r2, r2, #1
 317 016c D152     		strh	r1, [r2, r3]
 318              	.L14:
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 12


 306:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #else
 307:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 Sensor_ADC_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/Sensor_ADC.c ****             #endif /* end Sensor_ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == Sensor_ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/Sensor_ADC.c ****         }
 310:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_countsPer10Volt[chNum] = (int16)(((counts * Sensor_ADC_10MV_COUNTS) +
 319              		.loc 1 311 0 discriminator 2
 320 016e BB68     		ldr	r3, [r7, #8]
 321 0170 254A     		ldr	r2, .L17+100
 322 0172 5343     		mul	r3, r2
 323 0174 254A     		ldr	r2, .L17+104
 324 0176 9446     		mov	ip, r2
 325 0178 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/Sensor_ADC.c ****                             Sensor_ADC_DEFAULT_VREF_MV_VALUE) / (Sensor_ADC_DEFAULT_VREF_MV_VALUE *
 326              		.loc 1 312 0 discriminator 2
 327 017a 181C     		mov	r0, r3
 328 017c 2449     		ldr	r1, .L17+108
 329 017e FFF7FEFF 		bl	__aeabi_idiv
 330 0182 031C     		mov	r3, r0
 311:.\Generated_Source\PSoC4/Sensor_ADC.c ****                             Sensor_ADC_DEFAULT_VREF_MV_VALUE) / (Sensor_ADC_DEFAULT_VREF_MV_VALUE *
 331              		.loc 1 311 0 discriminator 2
 332 0184 9BB2     		uxth	r3, r3
 333 0186 19B2     		sxth	r1, r3
 334 0188 224B     		ldr	r3, .L17+112
 335 018a FA68     		ldr	r2, [r7, #12]
 336 018c 9200     		lsl	r2, r2, #2
 337 018e D150     		str	r1, [r2, r3]
 232:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 338              		.loc 1 232 0 discriminator 2
 339 0190 FB68     		ldr	r3, [r7, #12]
 340 0192 0133     		add	r3, r3, #1
 341 0194 FB60     		str	r3, [r7, #12]
 342              	.L8:
 232:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 343              		.loc 1 232 0 is_stmt 0 discriminator 1
 344 0196 FB68     		ldr	r3, [r7, #12]
 345 0198 022B     		cmp	r3, #2
 346 019a 88D9     		bls	.L16
 313:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 314:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 347              		.loc 1 314 0 is_stmt 1
 348 019c BD46     		mov	sp, r7
 349 019e 04B0     		add	sp, sp, #16
 350              		@ sp needed
 351 01a0 80BD     		pop	{r7, pc}
 352              	.L18:
 353 01a2 C046     		.align	2
 354              	.L17:
 355 01a4 00000000 		.word	Sensor_ADC_ISR
 356 01a8 20003A40 		.word	1077542944
 357 01ac 80033A40 		.word	1077543808
 358 01b0 70201013 		.word	319823984
 359 01b4 70200013 		.word	318775408
 360 01b8 00003A40 		.word	1077542912
 361 01bc 04003A40 		.word	1077542916
 362 01c0 25000080 		.word	-2147483611
 363 01c4 18003A40 		.word	1077542936
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 13


 364 01c8 0000FF07 		.word	134152192
 365 01cc 1C003A40 		.word	1077542940
 366 01d0 10003A40 		.word	1077542928
 367 01d4 08000800 		.word	524296
 368 01d8 14003A40 		.word	1077542932
 369 01dc 00033A40 		.word	1077543680
 370 01e0 40033A40 		.word	1077543744
 371 01e4 28023A40 		.word	1077543464
 372 01e8 38023A40 		.word	1077543480
 373 01ec 18023A40 		.word	1077543448
 374 01f0 30003A40 		.word	1077542960
 375 01f4 FFFFFFDF 		.word	-536870913
 376 01f8 00000000 		.word	Sensor_ADC_channelsConfig
 377 01fc 0C000000 		.word	Sensor_ADC_InputsPlacement.4784
 378 0200 80003A40 		.word	1077543040
 379 0204 00000000 		.word	Sensor_ADC_offset
 380 0208 10270000 		.word	10000
 381 020c E40C0000 		.word	3300
 382 0210 C8190000 		.word	6600
 383 0214 00000000 		.word	Sensor_ADC_countsPer10Volt
 384              		.cfi_endproc
 385              	.LFE3:
 386              		.size	Sensor_ADC_Init, .-Sensor_ADC_Init
 387              		.section	.text.Sensor_ADC_Enable,"ax",%progbits
 388              		.align	2
 389              		.global	Sensor_ADC_Enable
 390              		.code	16
 391              		.thumb_func
 392              		.type	Sensor_ADC_Enable, %function
 393              	Sensor_ADC_Enable:
 394              	.LFB4:
 315:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 316:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 320:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 323:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 326:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 329:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_Enable(void)
 331:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 395              		.loc 1 331 0
 396              		.cfi_startproc
 397 0000 80B5     		push	{r7, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 00AF     		add	r7, sp, #0
 402              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/Sensor_ADC.c ****     if (0u == (Sensor_ADC_SAR_CTRL_REG & Sensor_ADC_ENABLE))
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 14


 403              		.loc 1 332 0
 404 0004 0A4B     		ldr	r3, .L22
 405 0006 1B68     		ldr	r3, [r3]
 406 0008 002B     		cmp	r3, #0
 407 000a 0EDB     		blt	.L19
 333:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 334:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_CY_SAR_IP_VER != Sensor_ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 336:.\Generated_Source\PSoC4/Sensor_ADC.c ****             while (0u != (Sensor_ADC_SAR_STATUS_REG & Sensor_ADC_STATUS_BUSY))
 408              		.loc 1 336 0
 409 000c C046     		mov	r8, r8
 410              	.L21:
 411              		.loc 1 336 0 is_stmt 0 discriminator 1
 412 000e 094B     		ldr	r3, .L22+4
 413 0010 1B68     		ldr	r3, [r3]
 414 0012 002B     		cmp	r3, #0
 415 0014 FBDB     		blt	.L21
 337:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 338:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }
 340:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* (Sensor_ADC_CY_SAR_IP_VER != Sensor_ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/Sensor_ADC.c ****         
 342:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_SAR_CTRL_REG |= Sensor_ADC_ENABLE;
 416              		.loc 1 342 0 is_stmt 1
 417 0016 064B     		ldr	r3, .L22
 418 0018 054A     		ldr	r2, .L22
 419 001a 1268     		ldr	r2, [r2]
 420 001c 8021     		mov	r1, #128
 421 001e 0906     		lsl	r1, r1, #24
 422 0020 0A43     		orr	r2, r1
 423 0022 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/Sensor_ADC.c ****         
 344:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/Sensor_ADC.c ****         CyDelayUs(Sensor_ADC_10US_DELAY);         
 424              		.loc 1 345 0
 425 0024 0A20     		mov	r0, #10
 426 0026 FFF7FEFF 		bl	CyDelayUs
 427              	.L19:
 346:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 347:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 428              		.loc 1 347 0
 429 002a BD46     		mov	sp, r7
 430              		@ sp needed
 431 002c 80BD     		pop	{r7, pc}
 432              	.L23:
 433 002e C046     		.align	2
 434              	.L22:
 435 0030 00003A40 		.word	1077542912
 436 0034 08023A40 		.word	1077543432
 437              		.cfi_endproc
 438              	.LFE4:
 439              		.size	Sensor_ADC_Enable, .-Sensor_ADC_Enable
 440              		.section	.text.Sensor_ADC_Stop,"ax",%progbits
 441              		.align	2
 442              		.global	Sensor_ADC_Stop
 443              		.code	16
 444              		.thumb_func
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 15


 445              		.type	Sensor_ADC_Stop, %function
 446              	Sensor_ADC_Stop:
 447              	.LFB5:
 348:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 349:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 350:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_Stop
 352:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 354:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 358:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 361:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 364:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_Stop(void)
 366:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 448              		.loc 1 366 0
 449              		.cfi_startproc
 450 0000 80B5     		push	{r7, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_CTRL_REG &= (uint32)~Sensor_ADC_ENABLE;
 456              		.loc 1 367 0
 457 0004 034B     		ldr	r3, .L25
 458 0006 034A     		ldr	r2, .L25
 459 0008 1268     		ldr	r2, [r2]
 460 000a 5200     		lsl	r2, r2, #1
 461 000c 5208     		lsr	r2, r2, #1
 462 000e 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 463              		.loc 1 368 0
 464 0010 BD46     		mov	sp, r7
 465              		@ sp needed
 466 0012 80BD     		pop	{r7, pc}
 467              	.L26:
 468              		.align	2
 469              	.L25:
 470 0014 00003A40 		.word	1077542912
 471              		.cfi_endproc
 472              	.LFE5:
 473              		.size	Sensor_ADC_Stop, .-Sensor_ADC_Stop
 474              		.section	.text.Sensor_ADC_StartConvert,"ax",%progbits
 475              		.align	2
 476              		.global	Sensor_ADC_StartConvert
 477              		.code	16
 478              		.thumb_func
 479              		.type	Sensor_ADC_StartConvert, %function
 480              	Sensor_ADC_StartConvert:
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 16


 481              	.LFB6:
 369:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 370:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 371:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_StartConvert
 373:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 375:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 380:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 384:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 387:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 390:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 482              		.loc 1 392 0
 483              		.cfi_startproc
 484 0000 80B5     		push	{r7, lr}
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 7, -8
 487              		.cfi_offset 14, -4
 488 0002 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_DEFAULT_SAMPLE_MODE_SEL == Sensor_ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_SAR_SAMPLE_CTRL_REG |= Sensor_ADC_CONTINUOUS_EN;
 490              		.loc 1 394 0
 491 0004 044B     		ldr	r3, .L28
 492 0006 044A     		ldr	r2, .L28
 493 0008 1268     		ldr	r2, [r2]
 494 000a 8021     		mov	r1, #128
 495 000c 4902     		lsl	r1, r1, #9
 496 000e 0A43     		orr	r2, r1
 497 0010 1A60     		str	r2, [r3]
 395:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_SAR_START_CTRL_REG = Sensor_ADC_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif /* End Sensor_ADC_DEFAULT_SAMPLE_MODE == Sensor_ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 399:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 498              		.loc 1 399 0
 499 0012 BD46     		mov	sp, r7
 500              		@ sp needed
 501 0014 80BD     		pop	{r7, pc}
 502              	.L29:
 503 0016 C046     		.align	2
 504              	.L28:
 505 0018 04003A40 		.word	1077542916
 506              		.cfi_endproc
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 17


 507              	.LFE6:
 508              		.size	Sensor_ADC_StartConvert, .-Sensor_ADC_StartConvert
 509              		.section	.text.Sensor_ADC_StopConvert,"ax",%progbits
 510              		.align	2
 511              		.global	Sensor_ADC_StopConvert
 512              		.code	16
 513              		.thumb_func
 514              		.type	Sensor_ADC_StopConvert, %function
 515              	Sensor_ADC_StopConvert:
 516              	.LFB7:
 400:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 401:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 402:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_StopConvert
 404:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 406:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 409:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 412:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 415:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 517              		.loc 1 417 0
 518              		.cfi_startproc
 519 0000 80B5     		push	{r7, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 418:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_DEFAULT_SAMPLE_MODE_SEL == Sensor_ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~Sensor_ADC_CONTINUOUS_EN);
 525              		.loc 1 419 0
 526 0004 034B     		ldr	r3, .L31
 527 0006 034A     		ldr	r2, .L31
 528 0008 1268     		ldr	r2, [r2]
 529 000a 0349     		ldr	r1, .L31+4
 530 000c 0A40     		and	r2, r1
 531 000e 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif /* Sensor_ADC_DEFAULT_SAMPLE_MODE == Sensor_ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 532              		.loc 1 421 0
 533 0010 BD46     		mov	sp, r7
 534              		@ sp needed
 535 0012 80BD     		pop	{r7, pc}
 536              	.L32:
 537              		.align	2
 538              	.L31:
 539 0014 04003A40 		.word	1077542916
 540 0018 FFFFFEFF 		.word	-65537
 541              		.cfi_endproc
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 18


 542              	.LFE7:
 543              		.size	Sensor_ADC_StopConvert, .-Sensor_ADC_StopConvert
 544              		.section	.text.Sensor_ADC_IsEndConversion,"ax",%progbits
 545              		.align	2
 546              		.global	Sensor_ADC_IsEndConversion
 547              		.code	16
 548              		.thumb_func
 549              		.type	Sensor_ADC_IsEndConversion, %function
 550              	Sensor_ADC_IsEndConversion:
 551              	.LFB8:
 422:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 423:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 424:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 428:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 437:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/Sensor_ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/Sensor_ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 445:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 449:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/Sensor_ADC.c **** uint32 Sensor_ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 552              		.loc 1 451 0
 553              		.cfi_startproc
 554 0000 80B5     		push	{r7, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558 0002 84B0     		sub	sp, sp, #16
 559              		.cfi_def_cfa_offset 24
 560 0004 00AF     		add	r7, sp, #0
 561              		.cfi_def_cfa_register 7
 562 0006 7860     		str	r0, [r7, #4]
 452:.\Generated_Source\PSoC4/Sensor_ADC.c ****     uint32 status = 0u;
 563              		.loc 1 452 0
 564 0008 0023     		mov	r3, #0
 565 000a FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 454:.\Generated_Source\PSoC4/Sensor_ADC.c ****     if((retMode & (Sensor_ADC_RETURN_STATUS | Sensor_ADC_WAIT_FOR_RESULT)) != 0u)
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 19


 566              		.loc 1 454 0
 567 000c 7B68     		ldr	r3, [r7, #4]
 568 000e 0322     		mov	r2, #3
 569 0010 1340     		and	r3, r2
 570 0012 11D0     		beq	.L34
 571              	.L36:
 455:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 456:.\Generated_Source\PSoC4/Sensor_ADC.c ****         do
 457:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 458:.\Generated_Source\PSoC4/Sensor_ADC.c ****             status = Sensor_ADC_SAR_INTR_REG & Sensor_ADC_EOS_MASK;
 572              		.loc 1 458 0 discriminator 2
 573 0014 0B4B     		ldr	r3, .L38
 574 0016 1B68     		ldr	r3, [r3]
 575 0018 0122     		mov	r2, #1
 576 001a 1340     		and	r3, r2
 577 001c FB60     		str	r3, [r7, #12]
 459:.\Generated_Source\PSoC4/Sensor_ADC.c ****         }while((status == 0u) && ((retMode & Sensor_ADC_WAIT_FOR_RESULT) != 0u));
 578              		.loc 1 459 0 discriminator 2
 579 001e FB68     		ldr	r3, [r7, #12]
 580 0020 002B     		cmp	r3, #0
 581 0022 03D1     		bne	.L35
 582              		.loc 1 459 0 is_stmt 0 discriminator 1
 583 0024 7B68     		ldr	r3, [r7, #4]
 584 0026 0222     		mov	r2, #2
 585 0028 1340     		and	r3, r2
 586 002a F3D1     		bne	.L36
 587              	.L35:
 460:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 461:.\Generated_Source\PSoC4/Sensor_ADC.c ****         if(status != 0u)
 588              		.loc 1 461 0 is_stmt 1
 589 002c FB68     		ldr	r3, [r7, #12]
 590 002e 002B     		cmp	r3, #0
 591 0030 02D0     		beq	.L34
 462:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 463:.\Generated_Source\PSoC4/Sensor_ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/Sensor_ADC.c ****             Sensor_ADC_SAR_INTR_REG = Sensor_ADC_EOS_MASK;
 592              		.loc 1 464 0
 593 0032 044B     		ldr	r3, .L38
 594 0034 0122     		mov	r2, #1
 595 0036 1A60     		str	r2, [r3]
 596              	.L34:
 465:.\Generated_Source\PSoC4/Sensor_ADC.c ****         }
 466:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 467:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 468:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #if(Sensor_ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/Sensor_ADC.c ****         if((retMode & (Sensor_ADC_RETURN_STATUS_INJ | Sensor_ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/Sensor_ADC.c ****         {
 471:.\Generated_Source\PSoC4/Sensor_ADC.c ****             do
 472:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 473:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 status |= Sensor_ADC_SAR_INTR_REG & Sensor_ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }while(((status & Sensor_ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/Sensor_ADC.c ****                    ((retMode & Sensor_ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 477:.\Generated_Source\PSoC4/Sensor_ADC.c ****             if((status & Sensor_ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 479:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 Sensor_ADC_SAR_INTR_REG = Sensor_ADC_INJ_EOC_MASK;
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 20


 481:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }
 482:.\Generated_Source\PSoC4/Sensor_ADC.c ****         }
 483:.\Generated_Source\PSoC4/Sensor_ADC.c ****     #endif /* Sensor_ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 485:.\Generated_Source\PSoC4/Sensor_ADC.c ****     return (status);
 597              		.loc 1 485 0
 598 0038 FB68     		ldr	r3, [r7, #12]
 486:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 599              		.loc 1 486 0
 600 003a 181C     		mov	r0, r3
 601 003c BD46     		mov	sp, r7
 602 003e 04B0     		add	sp, sp, #16
 603              		@ sp needed
 604 0040 80BD     		pop	{r7, pc}
 605              	.L39:
 606 0042 C046     		.align	2
 607              	.L38:
 608 0044 10023A40 		.word	1077543440
 609              		.cfi_endproc
 610              	.LFE8:
 611              		.size	Sensor_ADC_IsEndConversion, .-Sensor_ADC_IsEndConversion
 612              		.section	.text.Sensor_ADC_GetResult16,"ax",%progbits
 613              		.align	2
 614              		.global	Sensor_ADC_GetResult16
 615              		.code	16
 616              		.thumb_func
 617              		.type	Sensor_ADC_GetResult16, %function
 618              	Sensor_ADC_GetResult16:
 619              	.LFB9:
 487:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 488:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 489:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_GetResult16
 491:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 493:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 496:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 500:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 503:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/Sensor_ADC.c **** int16 Sensor_ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 620              		.loc 1 505 0
 621              		.cfi_startproc
 622 0000 80B5     		push	{r7, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 84B0     		sub	sp, sp, #16
 627              		.cfi_def_cfa_offset 24
 628 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 21


 629              		.cfi_def_cfa_register 7
 630 0006 7860     		str	r0, [r7, #4]
 506:.\Generated_Source\PSoC4/Sensor_ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 508:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/Sensor_ADC.c ****     CYASSERT(chan < Sensor_ADC_TOTAL_CHANNELS_NUM);
 631              		.loc 1 509 0
 632 0008 7B68     		ldr	r3, [r7, #4]
 633 000a 022B     		cmp	r3, #2
 634 000c 02D9     		bls	.L41
 635              		.loc 1 509 0 is_stmt 0 discriminator 1
 636 000e 0020     		mov	r0, #0
 637 0010 FFF7FEFF 		bl	CyHalt
 638              	.L41:
 510:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 511:.\Generated_Source\PSoC4/Sensor_ADC.c ****     if(chan < Sensor_ADC_SEQUENCED_CHANNELS_NUM)
 639              		.loc 1 511 0 is_stmt 1
 640 0014 7B68     		ldr	r3, [r7, #4]
 641 0016 022B     		cmp	r3, #2
 642 0018 09D8     		bhi	.L42
 512:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 513:.\Generated_Source\PSoC4/Sensor_ADC.c ****         result = CY_GET_REG32((reg32 *)(Sensor_ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 643              		.loc 1 513 0
 644 001a 7B68     		ldr	r3, [r7, #4]
 645 001c 9B00     		lsl	r3, r3, #2
 646 001e 084A     		ldr	r2, .L45
 647 0020 9446     		mov	ip, r2
 648 0022 6344     		add	r3, r3, ip
 649 0024 1B68     		ldr	r3, [r3]
 650 0026 1B04     		lsl	r3, r3, #16
 651 0028 1B0C     		lsr	r3, r3, #16
 652 002a FB60     		str	r3, [r7, #12]
 653 002c 01E0     		b	.L43
 654              	.L42:
 514:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 Sensor_ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 516:.\Generated_Source\PSoC4/Sensor_ADC.c ****     else
 517:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 518:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/Sensor_ADC.c ****             result = Sensor_ADC_SAR_INJ_RESULT_REG & Sensor_ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #else
 521:.\Generated_Source\PSoC4/Sensor_ADC.c ****             result = 0u;
 655              		.loc 1 521 0
 656 002e 0023     		mov	r3, #0
 657 0030 FB60     		str	r3, [r7, #12]
 658              	.L43:
 522:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* Sensor_ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 524:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 525:.\Generated_Source\PSoC4/Sensor_ADC.c ****     return ( (int16)result );
 659              		.loc 1 525 0
 660 0032 FB68     		ldr	r3, [r7, #12]
 661 0034 9BB2     		uxth	r3, r3
 662 0036 1BB2     		sxth	r3, r3
 526:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 663              		.loc 1 526 0
 664 0038 181C     		mov	r0, r3
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 22


 665 003a BD46     		mov	sp, r7
 666 003c 04B0     		add	sp, sp, #16
 667              		@ sp needed
 668 003e 80BD     		pop	{r7, pc}
 669              	.L46:
 670              		.align	2
 671              	.L45:
 672 0040 80013A40 		.word	1077543296
 673              		.cfi_endproc
 674              	.LFE9:
 675              		.size	Sensor_ADC_GetResult16, .-Sensor_ADC_GetResult16
 676              		.section	.text.Sensor_ADC_SetChanMask,"ax",%progbits
 677              		.align	2
 678              		.global	Sensor_ADC_SetChanMask
 679              		.code	16
 680              		.thumb_func
 681              		.type	Sensor_ADC_SetChanMask, %function
 682              	Sensor_ADC_SetChanMask:
 683              	.LFB10:
 527:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 528:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 529:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_SetChanMask
 531:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 533:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 536:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 545:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 548:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 684              		.loc 1 550 0
 685              		.cfi_startproc
 686 0000 80B5     		push	{r7, lr}
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 7, -8
 689              		.cfi_offset 14, -4
 690 0002 82B0     		sub	sp, sp, #8
 691              		.cfi_def_cfa_offset 16
 692 0004 00AF     		add	r7, sp, #0
 693              		.cfi_def_cfa_register 7
 694 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_CHAN_EN_REG = mask & Sensor_ADC_MAX_CHANNELS_EN_MASK;
 695              		.loc 1 551 0
 696 0008 034B     		ldr	r3, .L48
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 23


 697 000a 7A68     		ldr	r2, [r7, #4]
 698 000c 0721     		mov	r1, #7
 699 000e 0A40     		and	r2, r1
 700 0010 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 701              		.loc 1 552 0
 702 0012 BD46     		mov	sp, r7
 703 0014 02B0     		add	sp, sp, #8
 704              		@ sp needed
 705 0016 80BD     		pop	{r7, pc}
 706              	.L49:
 707              		.align	2
 708              	.L48:
 709 0018 20003A40 		.word	1077542944
 710              		.cfi_endproc
 711              	.LFE10:
 712              		.size	Sensor_ADC_SetChanMask, .-Sensor_ADC_SetChanMask
 713              		.section	.text.Sensor_ADC_SetLowLimit,"ax",%progbits
 714              		.align	2
 715              		.global	Sensor_ADC_SetLowLimit
 716              		.code	16
 717              		.thumb_func
 718              		.type	Sensor_ADC_SetLowLimit, %function
 719              	Sensor_ADC_SetLowLimit:
 720              	.LFB11:
 553:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 554:.\Generated_Source\PSoC4/Sensor_ADC.c **** #if(Sensor_ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 556:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 557:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Function Name: Sensor_ADC_EnableInjection
 559:.\Generated_Source\PSoC4/Sensor_ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 561:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 564:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 567:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 570:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/Sensor_ADC.c ****     void Sensor_ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 573:.\Generated_Source\PSoC4/Sensor_ADC.c ****         Sensor_ADC_SAR_INJ_CHAN_CONFIG_REG |= Sensor_ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 575:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 576:.\Generated_Source\PSoC4/Sensor_ADC.c **** #endif /* Sensor_ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 578:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 579:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 583:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sets the low limit parameter for a limit condition.
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 24


 585:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 586:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 589:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 592:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 721              		.loc 1 594 0
 722              		.cfi_startproc
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 82B0     		sub	sp, sp, #8
 728              		.cfi_def_cfa_offset 16
 729 0004 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
 731 0006 7860     		str	r0, [r7, #4]
 595:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_RANGE_THRES_REG &= (uint32)(~Sensor_ADC_RANGE_LOW_MASK);
 732              		.loc 1 595 0
 733 0008 084B     		ldr	r3, .L51
 734 000a 084A     		ldr	r2, .L51
 735 000c 1268     		ldr	r2, [r2]
 736 000e 120C     		lsr	r2, r2, #16
 737 0010 1204     		lsl	r2, r2, #16
 738 0012 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_RANGE_THRES_REG |= lowLimit & Sensor_ADC_RANGE_LOW_MASK;
 739              		.loc 1 596 0
 740 0014 054B     		ldr	r3, .L51
 741 0016 054A     		ldr	r2, .L51
 742 0018 1168     		ldr	r1, [r2]
 743 001a 7A68     		ldr	r2, [r7, #4]
 744 001c 1204     		lsl	r2, r2, #16
 745 001e 120C     		lsr	r2, r2, #16
 746 0020 0A43     		orr	r2, r1
 747 0022 1A60     		str	r2, [r3]
 597:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 748              		.loc 1 597 0
 749 0024 BD46     		mov	sp, r7
 750 0026 02B0     		add	sp, sp, #8
 751              		@ sp needed
 752 0028 80BD     		pop	{r7, pc}
 753              	.L52:
 754 002a C046     		.align	2
 755              	.L51:
 756 002c 18003A40 		.word	1077542936
 757              		.cfi_endproc
 758              	.LFE11:
 759              		.size	Sensor_ADC_SetLowLimit, .-Sensor_ADC_SetLowLimit
 760              		.section	.text.Sensor_ADC_SetHighLimit,"ax",%progbits
 761              		.align	2
 762              		.global	Sensor_ADC_SetHighLimit
 763              		.code	16
 764              		.thumb_func
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 25


 765              		.type	Sensor_ADC_SetHighLimit, %function
 766              	Sensor_ADC_SetHighLimit:
 767              	.LFB12:
 598:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 599:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 600:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 604:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 607:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 610:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 613:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 768              		.loc 1 615 0
 769              		.cfi_startproc
 770 0000 80B5     		push	{r7, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 82B0     		sub	sp, sp, #8
 775              		.cfi_def_cfa_offset 16
 776 0004 00AF     		add	r7, sp, #0
 777              		.cfi_def_cfa_register 7
 778 0006 7860     		str	r0, [r7, #4]
 616:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_RANGE_THRES_REG &= (uint32)(~Sensor_ADC_RANGE_HIGH_MASK);
 779              		.loc 1 616 0
 780 0008 074B     		ldr	r3, .L54
 781 000a 074A     		ldr	r2, .L54
 782 000c 1268     		ldr	r2, [r2]
 783 000e 1204     		lsl	r2, r2, #16
 784 0010 120C     		lsr	r2, r2, #16
 785 0012 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << Sensor_ADC_RANGE_HIGH_OFFSET);
 786              		.loc 1 617 0
 787 0014 044B     		ldr	r3, .L54
 788 0016 044A     		ldr	r2, .L54
 789 0018 1168     		ldr	r1, [r2]
 790 001a 7A68     		ldr	r2, [r7, #4]
 791 001c 1204     		lsl	r2, r2, #16
 792 001e 0A43     		orr	r2, r1
 793 0020 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 794              		.loc 1 618 0
 795 0022 BD46     		mov	sp, r7
 796 0024 02B0     		add	sp, sp, #8
 797              		@ sp needed
 798 0026 80BD     		pop	{r7, pc}
 799              	.L55:
 800              		.align	2
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 26


 801              	.L54:
 802 0028 18003A40 		.word	1077542936
 803              		.cfi_endproc
 804              	.LFE12:
 805              		.size	Sensor_ADC_SetHighLimit, .-Sensor_ADC_SetHighLimit
 806              		.section	.text.Sensor_ADC_SetLimitMask,"ax",%progbits
 807              		.align	2
 808              		.global	Sensor_ADC_SetLimitMask
 809              		.code	16
 810              		.thumb_func
 811              		.type	Sensor_ADC_SetLimitMask, %function
 812              	Sensor_ADC_SetLimitMask:
 813              	.LFB13:
 619:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 620:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 621:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 625:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 628:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 634:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 637:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 814              		.loc 1 639 0
 815              		.cfi_startproc
 816 0000 80B5     		push	{r7, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 82B0     		sub	sp, sp, #8
 821              		.cfi_def_cfa_offset 16
 822 0004 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 824 0006 7860     		str	r0, [r7, #4]
 640:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_RANGE_INTR_MASK_REG = mask & Sensor_ADC_MAX_CHANNELS_EN_MASK;
 825              		.loc 1 640 0
 826 0008 034B     		ldr	r3, .L57
 827 000a 7A68     		ldr	r2, [r7, #4]
 828 000c 0721     		mov	r1, #7
 829 000e 0A40     		and	r2, r1
 830 0010 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 831              		.loc 1 641 0
 832 0012 BD46     		mov	sp, r7
 833 0014 02B0     		add	sp, sp, #8
 834              		@ sp needed
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 27


 835 0016 80BD     		pop	{r7, pc}
 836              	.L58:
 837              		.align	2
 838              	.L57:
 839 0018 38023A40 		.word	1077543480
 840              		.cfi_endproc
 841              	.LFE13:
 842              		.size	Sensor_ADC_SetLimitMask, .-Sensor_ADC_SetLimitMask
 843              		.section	.text.Sensor_ADC_SetSatMask,"ax",%progbits
 844              		.align	2
 845              		.global	Sensor_ADC_SetSatMask
 846              		.code	16
 847              		.thumb_func
 848              		.type	Sensor_ADC_SetSatMask, %function
 849              	Sensor_ADC_SetSatMask:
 850              	.LFB14:
 642:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 643:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 644:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_SetSatMask
 646:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 648:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 651:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 657:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 660:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 851              		.loc 1 662 0
 852              		.cfi_startproc
 853 0000 80B5     		push	{r7, lr}
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 82B0     		sub	sp, sp, #8
 858              		.cfi_def_cfa_offset 16
 859 0004 00AF     		add	r7, sp, #0
 860              		.cfi_def_cfa_register 7
 861 0006 7860     		str	r0, [r7, #4]
 663:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_SAR_SATURATE_INTR_MASK_REG = mask & Sensor_ADC_MAX_CHANNELS_EN_MASK;
 862              		.loc 1 663 0
 863 0008 034B     		ldr	r3, .L60
 864 000a 7A68     		ldr	r2, [r7, #4]
 865 000c 0721     		mov	r1, #7
 866 000e 0A40     		and	r2, r1
 867 0010 1A60     		str	r2, [r3]
 664:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 868              		.loc 1 664 0
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 28


 869 0012 BD46     		mov	sp, r7
 870 0014 02B0     		add	sp, sp, #8
 871              		@ sp needed
 872 0016 80BD     		pop	{r7, pc}
 873              	.L61:
 874              		.align	2
 875              	.L60:
 876 0018 28023A40 		.word	1077543464
 877              		.cfi_endproc
 878              	.LFE14:
 879              		.size	Sensor_ADC_SetSatMask, .-Sensor_ADC_SetSatMask
 880              		.section	.text.Sensor_ADC_SetOffset,"ax",%progbits
 881              		.align	2
 882              		.global	Sensor_ADC_SetOffset
 883              		.code	16
 884              		.thumb_func
 885              		.type	Sensor_ADC_SetOffset, %function
 886              	Sensor_ADC_SetOffset:
 887              	.LFB15:
 665:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 666:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 667:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_SetOffset
 669:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 671:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/Sensor_ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/Sensor_ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/Sensor_ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/Sensor_ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 677:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/Sensor_ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 682:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 685:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sensor_ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 688:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 888              		.loc 1 690 0
 889              		.cfi_startproc
 890 0000 80B5     		push	{r7, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 16
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 898 0006 7860     		str	r0, [r7, #4]
 899 0008 0A1C     		mov	r2, r1
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 29


 900 000a BB1C     		add	r3, r7, #2
 901 000c 1A80     		strh	r2, [r3]
 691:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/Sensor_ADC.c ****     CYASSERT(chan < Sensor_ADC_TOTAL_CHANNELS_NUM);
 902              		.loc 1 692 0
 903 000e 7B68     		ldr	r3, [r7, #4]
 904 0010 022B     		cmp	r3, #2
 905 0012 02D9     		bls	.L63
 906              		.loc 1 692 0 is_stmt 0 discriminator 1
 907 0014 0020     		mov	r0, #0
 908 0016 FFF7FEFF 		bl	CyHalt
 909              	.L63:
 693:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 694:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_offset[chan] = offset;
 910              		.loc 1 694 0 is_stmt 1
 911 001a 044B     		ldr	r3, .L64
 912 001c 7A68     		ldr	r2, [r7, #4]
 913 001e 5200     		lsl	r2, r2, #1
 914 0020 B91C     		add	r1, r7, #2
 915 0022 0988     		ldrh	r1, [r1]
 916 0024 D152     		strh	r1, [r2, r3]
 695:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 917              		.loc 1 695 0
 918 0026 BD46     		mov	sp, r7
 919 0028 02B0     		add	sp, sp, #8
 920              		@ sp needed
 921 002a 80BD     		pop	{r7, pc}
 922              	.L65:
 923              		.align	2
 924              	.L64:
 925 002c 00000000 		.word	Sensor_ADC_offset
 926              		.cfi_endproc
 927              	.LFE15:
 928              		.size	Sensor_ADC_SetOffset, .-Sensor_ADC_SetOffset
 929              		.section	.text.Sensor_ADC_SetGain,"ax",%progbits
 930              		.align	2
 931              		.global	Sensor_ADC_SetGain
 932              		.code	16
 933              		.thumb_func
 934              		.type	Sensor_ADC_SetGain, %function
 935              	Sensor_ADC_SetGain:
 936              	.LFB16:
 696:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 697:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 698:.\Generated_Source\PSoC4/Sensor_ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Function Name: Sensor_ADC_SetGain
 700:.\Generated_Source\PSoC4/Sensor_ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 702:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 30


 711:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 715:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 718:.\Generated_Source\PSoC4/Sensor_ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/Sensor_ADC.c **** *  Sensor_ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/Sensor_ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/Sensor_ADC.c **** *
 722:.\Generated_Source\PSoC4/Sensor_ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/Sensor_ADC.c **** void Sensor_ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/Sensor_ADC.c **** {
 937              		.loc 1 724 0
 938              		.cfi_startproc
 939 0000 80B5     		push	{r7, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 82B0     		sub	sp, sp, #8
 944              		.cfi_def_cfa_offset 16
 945 0004 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 948 0008 3960     		str	r1, [r7]
 725:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/Sensor_ADC.c ****     CYASSERT(chan < Sensor_ADC_TOTAL_CHANNELS_NUM);
 949              		.loc 1 726 0
 950 000a 7B68     		ldr	r3, [r7, #4]
 951 000c 022B     		cmp	r3, #2
 952 000e 02D9     		bls	.L67
 953              		.loc 1 726 0 is_stmt 0 discriminator 1
 954 0010 0020     		mov	r0, #0
 955 0012 FFF7FEFF 		bl	CyHalt
 956              	.L67:
 727:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 728:.\Generated_Source\PSoC4/Sensor_ADC.c ****     Sensor_ADC_countsPer10Volt[chan] = adcGain;
 957              		.loc 1 728 0 is_stmt 1
 958 0016 044B     		ldr	r3, .L68
 959 0018 7A68     		ldr	r2, [r7, #4]
 960 001a 9200     		lsl	r2, r2, #2
 961 001c 3968     		ldr	r1, [r7]
 962 001e D150     		str	r1, [r2, r3]
 729:.\Generated_Source\PSoC4/Sensor_ADC.c **** }
 963              		.loc 1 729 0
 964 0020 BD46     		mov	sp, r7
 965 0022 02B0     		add	sp, sp, #8
 966              		@ sp needed
 967 0024 80BD     		pop	{r7, pc}
 968              	.L69:
 969 0026 C046     		.align	2
 970              	.L68:
 971 0028 00000000 		.word	Sensor_ADC_countsPer10Volt
 972              		.cfi_endproc
 973              	.LFE16:
 974              		.size	Sensor_ADC_SetGain, .-Sensor_ADC_SetGain
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 31


 975              		.section	.text.Sensor_ADC_CountsTo_mVolts,"ax",%progbits
 976              		.align	2
 977              		.global	Sensor_ADC_CountsTo_mVolts
 978              		.code	16
 979              		.thumb_func
 980              		.type	Sensor_ADC_CountsTo_mVolts, %function
 981              	Sensor_ADC_CountsTo_mVolts:
 982              	.LFB17:
 730:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 731:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 732:.\Generated_Source\PSoC4/Sensor_ADC.c **** #if(Sensor_ADC_DEFAULT_JUSTIFICATION_SEL == Sensor_ADC__RIGHT)
 733:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 734:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 735:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Function Name: Sensor_ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/Sensor_ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 739:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 743:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 747:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 750:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Sensor_ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Sensor_ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 755:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/Sensor_ADC.c ****     int16 Sensor_ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 983              		.loc 1 757 0
 984              		.cfi_startproc
 985 0000 80B5     		push	{r7, lr}
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 84B0     		sub	sp, sp, #16
 990              		.cfi_def_cfa_offset 24
 991 0004 00AF     		add	r7, sp, #0
 992              		.cfi_def_cfa_register 7
 993 0006 7860     		str	r0, [r7, #4]
 994 0008 0A1C     		mov	r2, r1
 995 000a BB1C     		add	r3, r7, #2
 996 000c 1A80     		strh	r2, [r3]
 758:.\Generated_Source\PSoC4/Sensor_ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 760:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/Sensor_ADC.c ****         CYASSERT(chan < Sensor_ADC_TOTAL_CHANNELS_NUM);
 997              		.loc 1 761 0
 998 000e 7B68     		ldr	r3, [r7, #4]
 999 0010 022B     		cmp	r3, #2
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 32


 1000 0012 02D9     		bls	.L71
 1001              		.loc 1 761 0 is_stmt 0 discriminator 1
 1002 0014 0020     		mov	r0, #0
 1003 0016 FFF7FEFF 		bl	CyHalt
 1004              	.L71:
 762:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 763:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_DEFAULT_AVG_MODE == Sensor_ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/Sensor_ADC.c ****             if((Sensor_ADC_channelsConfig[chan] & Sensor_ADC_AVERAGING_EN) != 0u)
 1005              		.loc 1 765 0 is_stmt 1
 1006 001a 274B     		ldr	r3, .L79
 1007 001c 7A68     		ldr	r2, [r7, #4]
 1008 001e 9200     		lsl	r2, r2, #2
 1009 0020 D258     		ldr	r2, [r2, r3]
 1010 0022 8023     		mov	r3, #128
 1011 0024 DB00     		lsl	r3, r3, #3
 1012 0026 1340     		and	r3, r2
 1013 0028 08D0     		beq	.L72
 766:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 767:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 adcCounts /= Sensor_ADC_DEFAULT_AVG_SAMPLES_DIV;
 1014              		.loc 1 767 0
 1015 002a BA1C     		add	r2, r7, #2
 1016 002c BB1C     		add	r3, r7, #2
 1017 002e 0021     		mov	r1, #0
 1018 0030 5B5E     		ldrsh	r3, [r3, r1]
 1019 0032 002B     		cmp	r3, #0
 1020 0034 00DA     		bge	.L73
 1021 0036 0733     		add	r3, r3, #7
 1022              	.L73:
 1023 0038 DB10     		asr	r3, r3, #3
 1024 003a 1380     		strh	r3, [r2]
 1025              	.L72:
 768:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }
 769:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* Sensor_ADC_DEFAULT_AVG_MODE == Sensor_ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 771:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/Sensor_ADC.c ****         adcCounts -= Sensor_ADC_offset[chan];
 1026              		.loc 1 772 0
 1027 003c 1F4B     		ldr	r3, .L79+4
 1028 003e 7A68     		ldr	r2, [r7, #4]
 1029 0040 5200     		lsl	r2, r2, #1
 1030 0042 D35A     		ldrh	r3, [r2, r3]
 1031 0044 99B2     		uxth	r1, r3
 1032 0046 BB1C     		add	r3, r7, #2
 1033 0048 1A88     		ldrh	r2, [r3]
 1034 004a 8BB2     		uxth	r3, r1
 1035 004c D31A     		sub	r3, r2, r3
 1036 004e 9AB2     		uxth	r2, r3
 1037 0050 BB1C     		add	r3, r7, #2
 1038 0052 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 774:.\Generated_Source\PSoC4/Sensor_ADC.c ****         mVolts = (int16)((((int32)adcCounts * Sensor_ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1039              		.loc 1 774 0
 1040 0054 BB1C     		add	r3, r7, #2
 1041 0056 0022     		mov	r2, #0
 1042 0058 9B5E     		ldrsh	r3, [r3, r2]
 1043 005a 194A     		ldr	r2, .L79+8
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 33


 1044 005c 5A43     		mul	r2, r3
 775:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (Sensor_ADC_countsPer10Volt[chan] / 2) : (-(Sensor_ADC_countsPer10Volt[chan] / 2))
 1045              		.loc 1 775 0
 1046 005e BB1C     		add	r3, r7, #2
 1047 0060 0021     		mov	r1, #0
 1048 0062 5B5E     		ldrsh	r3, [r3, r1]
 1049 0064 002B     		cmp	r3, #0
 1050 0066 08DD     		ble	.L74
 1051              		.loc 1 775 0 is_stmt 0 discriminator 1
 1052 0068 164B     		ldr	r3, .L79+12
 1053 006a 7968     		ldr	r1, [r7, #4]
 1054 006c 8900     		lsl	r1, r1, #2
 1055 006e CB58     		ldr	r3, [r1, r3]
 1056 0070 002B     		cmp	r3, #0
 1057 0072 00DA     		bge	.L75
 1058 0074 0133     		add	r3, r3, #1
 1059              	.L75:
 1060 0076 5B10     		asr	r3, r3, #1
 1061 0078 08E0     		b	.L76
 1062              	.L74:
 1063              		.loc 1 775 0 discriminator 2
 1064 007a 124B     		ldr	r3, .L79+12
 1065 007c 7968     		ldr	r1, [r7, #4]
 1066 007e 8900     		lsl	r1, r1, #2
 1067 0080 CB58     		ldr	r3, [r1, r3]
 1068 0082 002B     		cmp	r3, #0
 1069 0084 00DA     		bge	.L77
 1070 0086 0133     		add	r3, r3, #1
 1071              	.L77:
 1072 0088 5B10     		asr	r3, r3, #1
 1073 008a 5B42     		neg	r3, r3
 1074              	.L76:
 774:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (Sensor_ADC_countsPer10Volt[chan] / 2) : (-(Sensor_ADC_countsPer10Volt[chan] / 2))
 1075              		.loc 1 774 0 is_stmt 1
 1076 008c D118     		add	r1, r2, r3
 776:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  / Sensor_ADC_countsPer10Volt[chan]);
 1077              		.loc 1 776 0
 1078 008e 0D4B     		ldr	r3, .L79+12
 1079 0090 7A68     		ldr	r2, [r7, #4]
 1080 0092 9200     		lsl	r2, r2, #2
 1081 0094 D358     		ldr	r3, [r2, r3]
 1082 0096 081C     		mov	r0, r1
 1083 0098 191C     		mov	r1, r3
 1084 009a FFF7FEFF 		bl	__aeabi_idiv
 1085 009e 031C     		mov	r3, r0
 1086 00a0 1A1C     		mov	r2, r3
 774:.\Generated_Source\PSoC4/Sensor_ADC.c ****                  (Sensor_ADC_countsPer10Volt[chan] / 2) : (-(Sensor_ADC_countsPer10Volt[chan] / 2))
 1087              		.loc 1 774 0
 1088 00a2 0E23     		mov	r3, #14
 1089 00a4 FB18     		add	r3, r7, r3
 1090 00a6 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 778:.\Generated_Source\PSoC4/Sensor_ADC.c ****         return( mVolts );
 1091              		.loc 1 778 0
 1092 00a8 0E23     		mov	r3, #14
 1093 00aa FB18     		add	r3, r7, r3
 1094 00ac 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 34


 1095 00ae 1BB2     		sxth	r3, r3
 779:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 1096              		.loc 1 779 0
 1097 00b0 181C     		mov	r0, r3
 1098 00b2 BD46     		mov	sp, r7
 1099 00b4 04B0     		add	sp, sp, #16
 1100              		@ sp needed
 1101 00b6 80BD     		pop	{r7, pc}
 1102              	.L80:
 1103              		.align	2
 1104              	.L79:
 1105 00b8 00000000 		.word	Sensor_ADC_channelsConfig
 1106 00bc 00000000 		.word	Sensor_ADC_offset
 1107 00c0 10270000 		.word	10000
 1108 00c4 00000000 		.word	Sensor_ADC_countsPer10Volt
 1109              		.cfi_endproc
 1110              	.LFE17:
 1111              		.size	Sensor_ADC_CountsTo_mVolts, .-Sensor_ADC_CountsTo_mVolts
 1112              		.global	__aeabi_lmul
 1113              		.global	__aeabi_ldivmod
 1114              		.section	.text.Sensor_ADC_CountsTo_uVolts,"ax",%progbits
 1115              		.align	2
 1116              		.global	Sensor_ADC_CountsTo_uVolts
 1117              		.code	16
 1118              		.thumb_func
 1119              		.type	Sensor_ADC_CountsTo_uVolts, %function
 1120              	Sensor_ADC_CountsTo_uVolts:
 1121              	.LFB18:
 780:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 781:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 782:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Function Name: Sensor_ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/Sensor_ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 786:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 790:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 794:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 797:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Sensor_ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Sensor_ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 802:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 35


 809:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/Sensor_ADC.c ****     int32 Sensor_ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
 1122              		.loc 1 811 0
 1123              		.cfi_startproc
 1124 0000 B0B5     		push	{r4, r5, r7, lr}
 1125              		.cfi_def_cfa_offset 16
 1126              		.cfi_offset 4, -16
 1127              		.cfi_offset 5, -12
 1128              		.cfi_offset 7, -8
 1129              		.cfi_offset 14, -4
 1130 0002 86B0     		sub	sp, sp, #24
 1131              		.cfi_def_cfa_offset 40
 1132 0004 00AF     		add	r7, sp, #0
 1133              		.cfi_def_cfa_register 7
 1134 0006 F860     		str	r0, [r7, #12]
 1135 0008 0A1C     		mov	r2, r1
 1136 000a 0A23     		mov	r3, #10
 1137 000c FB18     		add	r3, r7, r3
 1138 000e 1A80     		strh	r2, [r3]
 812:.\Generated_Source\PSoC4/Sensor_ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 814:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/Sensor_ADC.c ****         CYASSERT(chan < Sensor_ADC_TOTAL_CHANNELS_NUM);
 1139              		.loc 1 815 0
 1140 0010 FB68     		ldr	r3, [r7, #12]
 1141 0012 022B     		cmp	r3, #2
 1142 0014 02D9     		bls	.L82
 1143              		.loc 1 815 0 is_stmt 0 discriminator 1
 1144 0016 0020     		mov	r0, #0
 1145 0018 FFF7FEFF 		bl	CyHalt
 1146              	.L82:
 816:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 817:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_DEFAULT_AVG_MODE == Sensor_ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/Sensor_ADC.c ****             if((Sensor_ADC_channelsConfig[chan] & Sensor_ADC_AVERAGING_EN) != 0u)
 1147              		.loc 1 819 0 is_stmt 1
 1148 001c 224B     		ldr	r3, .L86
 1149 001e FA68     		ldr	r2, [r7, #12]
 1150 0020 9200     		lsl	r2, r2, #2
 1151 0022 D258     		ldr	r2, [r2, r3]
 1152 0024 8023     		mov	r3, #128
 1153 0026 DB00     		lsl	r3, r3, #3
 1154 0028 1340     		and	r3, r2
 1155 002a 0AD0     		beq	.L83
 820:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 821:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 adcCounts /= Sensor_ADC_DEFAULT_AVG_SAMPLES_DIV;
 1156              		.loc 1 821 0
 1157 002c 0A23     		mov	r3, #10
 1158 002e FA18     		add	r2, r7, r3
 1159 0030 0A23     		mov	r3, #10
 1160 0032 FB18     		add	r3, r7, r3
 1161 0034 0021     		mov	r1, #0
 1162 0036 5B5E     		ldrsh	r3, [r3, r1]
 1163 0038 002B     		cmp	r3, #0
 1164 003a 00DA     		bge	.L84
 1165 003c 0733     		add	r3, r3, #7
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 36


 1166              	.L84:
 1167 003e DB10     		asr	r3, r3, #3
 1168 0040 1380     		strh	r3, [r2]
 1169              	.L83:
 822:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }
 823:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* Sensor_ADC_DEFAULT_AVG_MODE == Sensor_ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 825:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/Sensor_ADC.c ****         adcCounts -= Sensor_ADC_offset[chan];
 1170              		.loc 1 826 0
 1171 0042 1A4B     		ldr	r3, .L86+4
 1172 0044 FA68     		ldr	r2, [r7, #12]
 1173 0046 5200     		lsl	r2, r2, #1
 1174 0048 D35A     		ldrh	r3, [r2, r3]
 1175 004a 99B2     		uxth	r1, r3
 1176 004c 0A23     		mov	r3, #10
 1177 004e FB18     		add	r3, r7, r3
 1178 0050 1A88     		ldrh	r2, [r3]
 1179 0052 8BB2     		uxth	r3, r1
 1180 0054 D31A     		sub	r3, r2, r3
 1181 0056 9AB2     		uxth	r2, r3
 1182 0058 0A23     		mov	r3, #10
 1183 005a FB18     		add	r3, r7, r3
 1184 005c 1A80     		strh	r2, [r3]
 827:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 828:.\Generated_Source\PSoC4/Sensor_ADC.c ****         uVolts = ((int64)adcCounts * Sensor_ADC_10UV_COUNTS) / Sensor_ADC_countsPer10Volt[chan];
 1185              		.loc 1 828 0
 1186 005e 0A23     		mov	r3, #10
 1187 0060 FB18     		add	r3, r7, r3
 1188 0062 1B88     		ldrh	r3, [r3]
 1189 0064 1BB2     		sxth	r3, r3
 1190 0066 3B60     		str	r3, [r7]
 1191 0068 DB17     		asr	r3, r3, #31
 1192 006a 7B60     		str	r3, [r7, #4]
 1193 006c 3868     		ldr	r0, [r7]
 1194 006e 7968     		ldr	r1, [r7, #4]
 1195 0070 0F4A     		ldr	r2, .L86+8
 1196 0072 0023     		mov	r3, #0
 1197 0074 FFF7FEFF 		bl	__aeabi_lmul
 1198 0078 021C     		mov	r2, r0
 1199 007a 0B1C     		mov	r3, r1
 1200 007c 101C     		mov	r0, r2
 1201 007e 191C     		mov	r1, r3
 1202 0080 0C4B     		ldr	r3, .L86+12
 1203 0082 FA68     		ldr	r2, [r7, #12]
 1204 0084 9200     		lsl	r2, r2, #2
 1205 0086 D358     		ldr	r3, [r2, r3]
 1206 0088 1C1C     		mov	r4, r3
 1207 008a DB17     		asr	r3, r3, #31
 1208 008c 1D1C     		mov	r5, r3
 1209 008e 221C     		mov	r2, r4
 1210 0090 2B1C     		mov	r3, r5
 1211 0092 FFF7FEFF 		bl	__aeabi_ldivmod
 1212 0096 031C     		mov	r3, r0
 1213 0098 0C1C     		mov	r4, r1
 1214 009a 3B61     		str	r3, [r7, #16]
 1215 009c 7C61     		str	r4, [r7, #20]
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 37


 829:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 830:.\Generated_Source\PSoC4/Sensor_ADC.c ****         return( (int32)uVolts );
 1216              		.loc 1 830 0
 1217 009e 3B69     		ldr	r3, [r7, #16]
 831:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 1218              		.loc 1 831 0
 1219 00a0 181C     		mov	r0, r3
 1220 00a2 BD46     		mov	sp, r7
 1221 00a4 06B0     		add	sp, sp, #24
 1222              		@ sp needed
 1223 00a6 B0BD     		pop	{r4, r5, r7, pc}
 1224              	.L87:
 1225              		.align	2
 1226              	.L86:
 1227 00a8 00000000 		.word	Sensor_ADC_channelsConfig
 1228 00ac 00000000 		.word	Sensor_ADC_offset
 1229 00b0 80969800 		.word	10000000
 1230 00b4 00000000 		.word	Sensor_ADC_countsPer10Volt
 1231              		.cfi_endproc
 1232              	.LFE18:
 1233              		.size	Sensor_ADC_CountsTo_uVolts, .-Sensor_ADC_CountsTo_uVolts
 1234              		.global	__aeabi_i2f
 1235              		.global	__aeabi_fmul
 1236              		.global	__aeabi_fdiv
 1237              		.section	.text.Sensor_ADC_CountsTo_Volts,"ax",%progbits
 1238              		.align	2
 1239              		.global	Sensor_ADC_CountsTo_Volts
 1240              		.code	16
 1241              		.thumb_func
 1242              		.type	Sensor_ADC_CountsTo_Volts, %function
 1243              	Sensor_ADC_CountsTo_Volts:
 1244              	.LFB19:
 832:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 833:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 834:.\Generated_Source\PSoC4/Sensor_ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Function Name: Sensor_ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/Sensor_ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 838:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 842:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 846:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 849:.\Generated_Source\PSoC4/Sensor_ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Sensor_ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *  Sensor_ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *
 854:.\Generated_Source\PSoC4/Sensor_ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/Sensor_ADC.c ****     float32 Sensor_ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/Sensor_ADC.c ****     {
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 38


 1245              		.loc 1 856 0
 1246              		.cfi_startproc
 1247 0000 90B5     		push	{r4, r7, lr}
 1248              		.cfi_def_cfa_offset 12
 1249              		.cfi_offset 4, -12
 1250              		.cfi_offset 7, -8
 1251              		.cfi_offset 14, -4
 1252 0002 85B0     		sub	sp, sp, #20
 1253              		.cfi_def_cfa_offset 32
 1254 0004 00AF     		add	r7, sp, #0
 1255              		.cfi_def_cfa_register 7
 1256 0006 7860     		str	r0, [r7, #4]
 1257 0008 0A1C     		mov	r2, r1
 1258 000a BB1C     		add	r3, r7, #2
 1259 000c 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/Sensor_ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 859:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/Sensor_ADC.c ****         CYASSERT(chan < Sensor_ADC_TOTAL_CHANNELS_NUM);
 1260              		.loc 1 860 0
 1261 000e 7B68     		ldr	r3, [r7, #4]
 1262 0010 022B     		cmp	r3, #2
 1263 0012 02D9     		bls	.L89
 1264              		.loc 1 860 0 is_stmt 0 discriminator 1
 1265 0014 0020     		mov	r0, #0
 1266 0016 FFF7FEFF 		bl	CyHalt
 1267              	.L89:
 861:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 862:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #if(Sensor_ADC_DEFAULT_AVG_MODE == Sensor_ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/Sensor_ADC.c ****             if((Sensor_ADC_channelsConfig[chan] & Sensor_ADC_AVERAGING_EN) != 0u)
 1268              		.loc 1 864 0 is_stmt 1
 1269 001a 1E4B     		ldr	r3, .L93
 1270 001c 7A68     		ldr	r2, [r7, #4]
 1271 001e 9200     		lsl	r2, r2, #2
 1272 0020 D258     		ldr	r2, [r2, r3]
 1273 0022 8023     		mov	r3, #128
 1274 0024 DB00     		lsl	r3, r3, #3
 1275 0026 1340     		and	r3, r2
 1276 0028 08D0     		beq	.L90
 865:.\Generated_Source\PSoC4/Sensor_ADC.c ****             {
 866:.\Generated_Source\PSoC4/Sensor_ADC.c ****                 adcCounts /= Sensor_ADC_DEFAULT_AVG_SAMPLES_DIV;
 1277              		.loc 1 866 0
 1278 002a BA1C     		add	r2, r7, #2
 1279 002c BB1C     		add	r3, r7, #2
 1280 002e 0021     		mov	r1, #0
 1281 0030 5B5E     		ldrsh	r3, [r3, r1]
 1282 0032 002B     		cmp	r3, #0
 1283 0034 00DA     		bge	.L91
 1284 0036 0733     		add	r3, r3, #7
 1285              	.L91:
 1286 0038 DB10     		asr	r3, r3, #3
 1287 003a 1380     		strh	r3, [r2]
 1288              	.L90:
 867:.\Generated_Source\PSoC4/Sensor_ADC.c ****             }
 868:.\Generated_Source\PSoC4/Sensor_ADC.c ****         #endif /* Sensor_ADC_DEFAULT_AVG_MODE == Sensor_ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 39


 870:.\Generated_Source\PSoC4/Sensor_ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/Sensor_ADC.c ****         adcCounts -= Sensor_ADC_offset[chan];
 1289              		.loc 1 871 0
 1290 003c 164B     		ldr	r3, .L93+4
 1291 003e 7A68     		ldr	r2, [r7, #4]
 1292 0040 5200     		lsl	r2, r2, #1
 1293 0042 D35A     		ldrh	r3, [r2, r3]
 1294 0044 99B2     		uxth	r1, r3
 1295 0046 BB1C     		add	r3, r7, #2
 1296 0048 1A88     		ldrh	r2, [r3]
 1297 004a 8BB2     		uxth	r3, r1
 1298 004c D31A     		sub	r3, r2, r3
 1299 004e 9AB2     		uxth	r2, r3
 1300 0050 BB1C     		add	r3, r7, #2
 1301 0052 1A80     		strh	r2, [r3]
 872:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 873:.\Generated_Source\PSoC4/Sensor_ADC.c ****         volts = ((float32)adcCounts * Sensor_ADC_10V_COUNTS) / (float32)Sensor_ADC_countsPer10Volt[
 1302              		.loc 1 873 0
 1303 0054 BB1C     		add	r3, r7, #2
 1304 0056 0022     		mov	r2, #0
 1305 0058 9B5E     		ldrsh	r3, [r3, r2]
 1306 005a 181C     		mov	r0, r3
 1307 005c FFF7FEFF 		bl	__aeabi_i2f
 1308 0060 031C     		add	r3, r0, #0
 1309 0062 181C     		add	r0, r3, #0
 1310 0064 0D49     		ldr	r1, .L93+8
 1311 0066 FFF7FEFF 		bl	__aeabi_fmul
 1312 006a 031C     		add	r3, r0, #0
 1313 006c 1C1C     		add	r4, r3, #0
 1314 006e 0C4B     		ldr	r3, .L93+12
 1315 0070 7A68     		ldr	r2, [r7, #4]
 1316 0072 9200     		lsl	r2, r2, #2
 1317 0074 D358     		ldr	r3, [r2, r3]
 1318 0076 181C     		mov	r0, r3
 1319 0078 FFF7FEFF 		bl	__aeabi_i2f
 1320 007c 031C     		add	r3, r0, #0
 1321 007e 201C     		add	r0, r4, #0
 1322 0080 191C     		add	r1, r3, #0
 1323 0082 FFF7FEFF 		bl	__aeabi_fdiv
 1324 0086 031C     		add	r3, r0, #0
 1325 0088 FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/Sensor_ADC.c **** 
 875:.\Generated_Source\PSoC4/Sensor_ADC.c ****         return( volts );
 1326              		.loc 1 875 0
 1327 008a FB68     		ldr	r3, [r7, #12]
 876:.\Generated_Source\PSoC4/Sensor_ADC.c ****     }
 1328              		.loc 1 876 0
 1329 008c 181C     		add	r0, r3, #0
 1330 008e BD46     		mov	sp, r7
 1331 0090 05B0     		add	sp, sp, #20
 1332              		@ sp needed
 1333 0092 90BD     		pop	{r4, r7, pc}
 1334              	.L94:
 1335              		.align	2
 1336              	.L93:
 1337 0094 00000000 		.word	Sensor_ADC_channelsConfig
 1338 0098 00000000 		.word	Sensor_ADC_offset
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 40


 1339 009c 00002041 		.word	1092616192
 1340 00a0 00000000 		.word	Sensor_ADC_countsPer10Volt
 1341              		.cfi_endproc
 1342              	.LFE19:
 1343              		.size	Sensor_ADC_CountsTo_Volts, .-Sensor_ADC_CountsTo_Volts
 1344              		.section	.rodata
 1345              		.align	2
 1346              		.type	Sensor_ADC_InputsPlacement.4784, %object
 1347              		.size	Sensor_ADC_InputsPlacement.4784, 3
 1348              	Sensor_ADC_InputsPlacement.4784:
 1349 000c 00       		.byte	0
 1350 000d 01       		.byte	1
 1351 000e 02       		.byte	2
 1352 000f 00       		.text
 1353              	.Letext0:
 1354              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1355              		.section	.debug_info,"",%progbits
 1356              	.Ldebug_info0:
 1357 0000 9D040000 		.4byte	0x49d
 1358 0004 0400     		.2byte	0x4
 1359 0006 00000000 		.4byte	.Ldebug_abbrev0
 1360 000a 04       		.byte	0x4
 1361 000b 01       		.uleb128 0x1
 1362 000c 7F030000 		.4byte	.LASF60
 1363 0010 01       		.byte	0x1
 1364 0011 0D040000 		.4byte	.LASF61
 1365 0015 F8010000 		.4byte	.LASF62
 1366 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1367 001d 00000000 		.4byte	0
 1368 0021 00000000 		.4byte	.Ldebug_line0
 1369 0025 02       		.uleb128 0x2
 1370 0026 01       		.byte	0x1
 1371 0027 06       		.byte	0x6
 1372 0028 56000000 		.4byte	.LASF0
 1373 002c 02       		.uleb128 0x2
 1374 002d 01       		.byte	0x1
 1375 002e 08       		.byte	0x8
 1376 002f B7020000 		.4byte	.LASF1
 1377 0033 02       		.uleb128 0x2
 1378 0034 02       		.byte	0x2
 1379 0035 05       		.byte	0x5
 1380 0036 DF020000 		.4byte	.LASF2
 1381 003a 02       		.uleb128 0x2
 1382 003b 02       		.byte	0x2
 1383 003c 07       		.byte	0x7
 1384 003d 8B010000 		.4byte	.LASF3
 1385 0041 02       		.uleb128 0x2
 1386 0042 04       		.byte	0x4
 1387 0043 05       		.byte	0x5
 1388 0044 7A000000 		.4byte	.LASF4
 1389 0048 02       		.uleb128 0x2
 1390 0049 04       		.byte	0x4
 1391 004a 07       		.byte	0x7
 1392 004b 2A010000 		.4byte	.LASF5
 1393 004f 02       		.uleb128 0x2
 1394 0050 08       		.byte	0x8
 1395 0051 05       		.byte	0x5
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 41


 1396 0052 48000000 		.4byte	.LASF6
 1397 0056 02       		.uleb128 0x2
 1398 0057 08       		.byte	0x8
 1399 0058 07       		.byte	0x7
 1400 0059 16000000 		.4byte	.LASF7
 1401 005d 03       		.uleb128 0x3
 1402 005e 04       		.byte	0x4
 1403 005f 05       		.byte	0x5
 1404 0060 696E7400 		.ascii	"int\000"
 1405 0064 02       		.uleb128 0x2
 1406 0065 04       		.byte	0x4
 1407 0066 07       		.byte	0x7
 1408 0067 16010000 		.4byte	.LASF8
 1409 006b 04       		.uleb128 0x4
 1410 006c B3000000 		.4byte	.LASF9
 1411 0070 02       		.byte	0x2
 1412 0071 9801     		.2byte	0x198
 1413 0073 2C000000 		.4byte	0x2c
 1414 0077 04       		.uleb128 0x4
 1415 0078 00000000 		.4byte	.LASF10
 1416 007c 02       		.byte	0x2
 1417 007d 9901     		.2byte	0x199
 1418 007f 3A000000 		.4byte	0x3a
 1419 0083 04       		.uleb128 0x4
 1420 0084 D7000000 		.4byte	.LASF11
 1421 0088 02       		.byte	0x2
 1422 0089 9A01     		.2byte	0x19a
 1423 008b 48000000 		.4byte	0x48
 1424 008f 04       		.uleb128 0x4
 1425 0090 5F030000 		.4byte	.LASF12
 1426 0094 02       		.byte	0x2
 1427 0095 9C01     		.2byte	0x19c
 1428 0097 33000000 		.4byte	0x33
 1429 009b 04       		.uleb128 0x4
 1430 009c 74000000 		.4byte	.LASF13
 1431 00a0 02       		.byte	0x2
 1432 00a1 9D01     		.2byte	0x19d
 1433 00a3 41000000 		.4byte	0x41
 1434 00a7 04       		.uleb128 0x4
 1435 00a8 C3010000 		.4byte	.LASF14
 1436 00ac 02       		.byte	0x2
 1437 00ad 9E01     		.2byte	0x19e
 1438 00af B3000000 		.4byte	0xb3
 1439 00b3 02       		.uleb128 0x2
 1440 00b4 04       		.byte	0x4
 1441 00b5 04       		.byte	0x4
 1442 00b6 62020000 		.4byte	.LASF15
 1443 00ba 02       		.uleb128 0x2
 1444 00bb 08       		.byte	0x8
 1445 00bc 04       		.byte	0x4
 1446 00bd B9000000 		.4byte	.LASF16
 1447 00c1 04       		.uleb128 0x4
 1448 00c2 5C020000 		.4byte	.LASF17
 1449 00c6 02       		.byte	0x2
 1450 00c7 A301     		.2byte	0x1a3
 1451 00c9 4F000000 		.4byte	0x4f
 1452 00cd 02       		.uleb128 0x2
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 42


 1453 00ce 01       		.byte	0x1
 1454 00cf 08       		.byte	0x8
 1455 00d0 F4020000 		.4byte	.LASF18
 1456 00d4 04       		.uleb128 0x4
 1457 00d5 A5010000 		.4byte	.LASF19
 1458 00d9 02       		.byte	0x2
 1459 00da 4402     		.2byte	0x244
 1460 00dc E0000000 		.4byte	0xe0
 1461 00e0 05       		.uleb128 0x5
 1462 00e1 83000000 		.4byte	0x83
 1463 00e5 02       		.uleb128 0x2
 1464 00e6 04       		.byte	0x4
 1465 00e7 07       		.byte	0x7
 1466 00e8 CB010000 		.4byte	.LASF20
 1467 00ec 06       		.uleb128 0x6
 1468 00ed 22030000 		.4byte	.LASF25
 1469 00f1 01       		.byte	0x1
 1470 00f2 3F       		.byte	0x3f
 1471 00f3 00000000 		.4byte	.LFB2
 1472 00f7 24000000 		.4byte	.LFE2-.LFB2
 1473 00fb 01       		.uleb128 0x1
 1474 00fc 9C       		.byte	0x9c
 1475 00fd 07       		.uleb128 0x7
 1476 00fe 0B030000 		.4byte	.LASF36
 1477 0102 01       		.byte	0x1
 1478 0103 5E       		.byte	0x5e
 1479 0104 00000000 		.4byte	.LFB3
 1480 0108 18020000 		.4byte	.LFE3-.LFB3
 1481 010c 01       		.uleb128 0x1
 1482 010d 9C       		.byte	0x9c
 1483 010e 4E010000 		.4byte	0x14e
 1484 0112 08       		.uleb128 0x8
 1485 0113 E9020000 		.4byte	.LASF21
 1486 0117 01       		.byte	0x1
 1487 0118 60       		.byte	0x60
 1488 0119 83000000 		.4byte	0x83
 1489 011d 02       		.uleb128 0x2
 1490 011e 91       		.byte	0x91
 1491 011f 74       		.sleb128 -12
 1492 0120 08       		.uleb128 0x8
 1493 0121 42010000 		.4byte	.LASF22
 1494 0125 01       		.byte	0x1
 1495 0126 61       		.byte	0x61
 1496 0127 83000000 		.4byte	0x83
 1497 012b 02       		.uleb128 0x2
 1498 012c 91       		.byte	0x91
 1499 012d 6C       		.sleb128 -20
 1500 012e 08       		.uleb128 0x8
 1501 012f 0F000000 		.4byte	.LASF23
 1502 0133 01       		.byte	0x1
 1503 0134 62       		.byte	0x62
 1504 0135 9B000000 		.4byte	0x9b
 1505 0139 02       		.uleb128 0x2
 1506 013a 91       		.byte	0x91
 1507 013b 70       		.sleb128 -16
 1508 013c 08       		.uleb128 0x8
 1509 013d 2D000000 		.4byte	.LASF24
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 43


 1510 0141 01       		.byte	0x1
 1511 0142 65       		.byte	0x65
 1512 0143 5E010000 		.4byte	0x15e
 1513 0147 05       		.uleb128 0x5
 1514 0148 03       		.byte	0x3
 1515 0149 0C000000 		.4byte	Sensor_ADC_InputsPlacement.4784
 1516 014d 00       		.byte	0
 1517 014e 09       		.uleb128 0x9
 1518 014f 6B000000 		.4byte	0x6b
 1519 0153 5E010000 		.4byte	0x15e
 1520 0157 0A       		.uleb128 0xa
 1521 0158 E5000000 		.4byte	0xe5
 1522 015c 02       		.byte	0x2
 1523 015d 00       		.byte	0
 1524 015e 0B       		.uleb128 0xb
 1525 015f 4E010000 		.4byte	0x14e
 1526 0163 0C       		.uleb128 0xc
 1527 0164 F9020000 		.4byte	.LASF26
 1528 0168 01       		.byte	0x1
 1529 0169 4A01     		.2byte	0x14a
 1530 016b 00000000 		.4byte	.LFB4
 1531 016f 38000000 		.4byte	.LFE4-.LFB4
 1532 0173 01       		.uleb128 0x1
 1533 0174 9C       		.byte	0x9c
 1534 0175 0D       		.uleb128 0xd
 1535 0176 63010000 		.4byte	.LASF27
 1536 017a 01       		.byte	0x1
 1537 017b 6D01     		.2byte	0x16d
 1538 017d 00000000 		.4byte	.LFB5
 1539 0181 18000000 		.4byte	.LFE5-.LFB5
 1540 0185 01       		.uleb128 0x1
 1541 0186 9C       		.byte	0x9c
 1542 0187 0D       		.uleb128 0xd
 1543 0188 73010000 		.4byte	.LASF28
 1544 018c 01       		.byte	0x1
 1545 018d 8701     		.2byte	0x187
 1546 018f 00000000 		.4byte	.LFB6
 1547 0193 1C000000 		.4byte	.LFE6-.LFB6
 1548 0197 01       		.uleb128 0x1
 1549 0198 9C       		.byte	0x9c
 1550 0199 0D       		.uleb128 0xd
 1551 019a 4C010000 		.4byte	.LASF29
 1552 019e 01       		.byte	0x1
 1553 019f A001     		.2byte	0x1a0
 1554 01a1 00000000 		.4byte	.LFB7
 1555 01a5 1C000000 		.4byte	.LFE7-.LFB7
 1556 01a9 01       		.uleb128 0x1
 1557 01aa 9C       		.byte	0x9c
 1558 01ab 0E       		.uleb128 0xe
 1559 01ac DD010000 		.4byte	.LASF31
 1560 01b0 01       		.byte	0x1
 1561 01b1 C201     		.2byte	0x1c2
 1562 01b3 83000000 		.4byte	0x83
 1563 01b7 00000000 		.4byte	.LFB8
 1564 01bb 48000000 		.4byte	.LFE8-.LFB8
 1565 01bf 01       		.uleb128 0x1
 1566 01c0 9C       		.byte	0x9c
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 44


 1567 01c1 E4010000 		.4byte	0x1e4
 1568 01c5 0F       		.uleb128 0xf
 1569 01c6 0E010000 		.4byte	.LASF33
 1570 01ca 01       		.byte	0x1
 1571 01cb C201     		.2byte	0x1c2
 1572 01cd 83000000 		.4byte	0x83
 1573 01d1 02       		.uleb128 0x2
 1574 01d2 91       		.byte	0x91
 1575 01d3 6C       		.sleb128 -20
 1576 01d4 10       		.uleb128 0x10
 1577 01d5 58030000 		.4byte	.LASF30
 1578 01d9 01       		.byte	0x1
 1579 01da C401     		.2byte	0x1c4
 1580 01dc 83000000 		.4byte	0x83
 1581 01e0 02       		.uleb128 0x2
 1582 01e1 91       		.byte	0x91
 1583 01e2 74       		.sleb128 -12
 1584 01e3 00       		.byte	0
 1585 01e4 11       		.uleb128 0x11
 1586 01e5 C0000000 		.4byte	.LASF32
 1587 01e9 01       		.byte	0x1
 1588 01ea F801     		.2byte	0x1f8
 1589 01ec 8F000000 		.4byte	0x8f
 1590 01f0 00000000 		.4byte	.LFB9
 1591 01f4 44000000 		.4byte	.LFE9-.LFB9
 1592 01f8 01       		.uleb128 0x1
 1593 01f9 9C       		.byte	0x9c
 1594 01fa 1D020000 		.4byte	0x21d
 1595 01fe 0F       		.uleb128 0xf
 1596 01ff EF020000 		.4byte	.LASF34
 1597 0203 01       		.byte	0x1
 1598 0204 F801     		.2byte	0x1f8
 1599 0206 83000000 		.4byte	0x83
 1600 020a 02       		.uleb128 0x2
 1601 020b 91       		.byte	0x91
 1602 020c 6C       		.sleb128 -20
 1603 020d 10       		.uleb128 0x10
 1604 020e 49040000 		.4byte	.LASF35
 1605 0212 01       		.byte	0x1
 1606 0213 FA01     		.2byte	0x1fa
 1607 0215 83000000 		.4byte	0x83
 1608 0219 02       		.uleb128 0x2
 1609 021a 91       		.byte	0x91
 1610 021b 74       		.sleb128 -12
 1611 021c 00       		.byte	0
 1612 021d 12       		.uleb128 0x12
 1613 021e 45020000 		.4byte	.LASF37
 1614 0222 01       		.byte	0x1
 1615 0223 2502     		.2byte	0x225
 1616 0225 00000000 		.4byte	.LFB10
 1617 0229 1C000000 		.4byte	.LFE10-.LFB10
 1618 022d 01       		.uleb128 0x1
 1619 022e 9C       		.byte	0x9c
 1620 022f 43020000 		.4byte	0x243
 1621 0233 0F       		.uleb128 0xf
 1622 0234 F6000000 		.4byte	.LASF38
 1623 0238 01       		.byte	0x1
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 45


 1624 0239 2502     		.2byte	0x225
 1625 023b 83000000 		.4byte	0x83
 1626 023f 02       		.uleb128 0x2
 1627 0240 91       		.byte	0x91
 1628 0241 74       		.sleb128 -12
 1629 0242 00       		.byte	0
 1630 0243 12       		.uleb128 0x12
 1631 0244 7B020000 		.4byte	.LASF39
 1632 0248 01       		.byte	0x1
 1633 0249 5102     		.2byte	0x251
 1634 024b 00000000 		.4byte	.LFB11
 1635 024f 30000000 		.4byte	.LFE11-.LFB11
 1636 0253 01       		.uleb128 0x1
 1637 0254 9C       		.byte	0x9c
 1638 0255 69020000 		.4byte	0x269
 1639 0259 0F       		.uleb128 0xf
 1640 025a D4010000 		.4byte	.LASF40
 1641 025e 01       		.byte	0x1
 1642 025f 5102     		.2byte	0x251
 1643 0261 83000000 		.4byte	0x83
 1644 0265 02       		.uleb128 0x2
 1645 0266 91       		.byte	0x91
 1646 0267 74       		.sleb128 -12
 1647 0268 00       		.byte	0
 1648 0269 12       		.uleb128 0x12
 1649 026a AB010000 		.4byte	.LASF41
 1650 026e 01       		.byte	0x1
 1651 026f 6602     		.2byte	0x266
 1652 0271 00000000 		.4byte	.LFB12
 1653 0275 2C000000 		.4byte	.LFE12-.LFB12
 1654 0279 01       		.uleb128 0x1
 1655 027a 9C       		.byte	0x9c
 1656 027b 8F020000 		.4byte	0x28f
 1657 027f 0F       		.uleb128 0xf
 1658 0280 92020000 		.4byte	.LASF42
 1659 0284 01       		.byte	0x1
 1660 0285 6602     		.2byte	0x266
 1661 0287 83000000 		.4byte	0x83
 1662 028b 02       		.uleb128 0x2
 1663 028c 91       		.byte	0x91
 1664 028d 74       		.sleb128 -12
 1665 028e 00       		.byte	0
 1666 028f 12       		.uleb128 0x12
 1667 0290 DE000000 		.4byte	.LASF43
 1668 0294 01       		.byte	0x1
 1669 0295 7E02     		.2byte	0x27e
 1670 0297 00000000 		.4byte	.LFB13
 1671 029b 1C000000 		.4byte	.LFE13-.LFB13
 1672 029f 01       		.uleb128 0x1
 1673 02a0 9C       		.byte	0x9c
 1674 02a1 B5020000 		.4byte	0x2b5
 1675 02a5 0F       		.uleb128 0xf
 1676 02a6 F6000000 		.4byte	.LASF38
 1677 02aa 01       		.byte	0x1
 1678 02ab 7E02     		.2byte	0x27e
 1679 02ad 83000000 		.4byte	0x83
 1680 02b1 02       		.uleb128 0x2
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 46


 1681 02b2 91       		.byte	0x91
 1682 02b3 74       		.sleb128 -12
 1683 02b4 00       		.byte	0
 1684 02b5 12       		.uleb128 0x12
 1685 02b6 33040000 		.4byte	.LASF44
 1686 02ba 01       		.byte	0x1
 1687 02bb 9502     		.2byte	0x295
 1688 02bd 00000000 		.4byte	.LFB14
 1689 02c1 1C000000 		.4byte	.LFE14-.LFB14
 1690 02c5 01       		.uleb128 0x1
 1691 02c6 9C       		.byte	0x9c
 1692 02c7 DB020000 		.4byte	0x2db
 1693 02cb 0F       		.uleb128 0xf
 1694 02cc F6000000 		.4byte	.LASF38
 1695 02d0 01       		.byte	0x1
 1696 02d1 9502     		.2byte	0x295
 1697 02d3 83000000 		.4byte	0x83
 1698 02d7 02       		.uleb128 0x2
 1699 02d8 91       		.byte	0x91
 1700 02d9 74       		.sleb128 -12
 1701 02da 00       		.byte	0
 1702 02db 13       		.uleb128 0x13
 1703 02dc 9E000000 		.4byte	.LASF45
 1704 02e0 01       		.byte	0x1
 1705 02e1 B102     		.2byte	0x2b1
 1706 02e3 00000000 		.4byte	.LFB15
 1707 02e7 30000000 		.4byte	.LFE15-.LFB15
 1708 02eb 01       		.uleb128 0x1
 1709 02ec 9C       		.byte	0x9c
 1710 02ed 10030000 		.4byte	0x310
 1711 02f1 0F       		.uleb128 0xf
 1712 02f2 EF020000 		.4byte	.LASF34
 1713 02f6 01       		.byte	0x1
 1714 02f7 B102     		.2byte	0x2b1
 1715 02f9 83000000 		.4byte	0x83
 1716 02fd 02       		.uleb128 0x2
 1717 02fe 91       		.byte	0x91
 1718 02ff 74       		.sleb128 -12
 1719 0300 0F       		.uleb128 0xf
 1720 0301 1B030000 		.4byte	.LASF46
 1721 0305 01       		.byte	0x1
 1722 0306 B102     		.2byte	0x2b1
 1723 0308 8F000000 		.4byte	0x8f
 1724 030c 02       		.uleb128 0x2
 1725 030d 91       		.byte	0x91
 1726 030e 72       		.sleb128 -14
 1727 030f 00       		.byte	0
 1728 0310 13       		.uleb128 0x13
 1729 0311 68020000 		.4byte	.LASF47
 1730 0315 01       		.byte	0x1
 1731 0316 D302     		.2byte	0x2d3
 1732 0318 00000000 		.4byte	.LFB16
 1733 031c 2C000000 		.4byte	.LFE16-.LFB16
 1734 0320 01       		.uleb128 0x1
 1735 0321 9C       		.byte	0x9c
 1736 0322 45030000 		.4byte	0x345
 1737 0326 0F       		.uleb128 0xf
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 47


 1738 0327 EF020000 		.4byte	.LASF34
 1739 032b 01       		.byte	0x1
 1740 032c D302     		.2byte	0x2d3
 1741 032e 83000000 		.4byte	0x83
 1742 0332 02       		.uleb128 0x2
 1743 0333 91       		.byte	0x91
 1744 0334 74       		.sleb128 -12
 1745 0335 0F       		.uleb128 0xf
 1746 0336 07000000 		.4byte	.LASF48
 1747 033a 01       		.byte	0x1
 1748 033b D302     		.2byte	0x2d3
 1749 033d 9B000000 		.4byte	0x9b
 1750 0341 02       		.uleb128 0x2
 1751 0342 91       		.byte	0x91
 1752 0343 70       		.sleb128 -16
 1753 0344 00       		.byte	0
 1754 0345 11       		.uleb128 0x11
 1755 0346 9C020000 		.4byte	.LASF49
 1756 034a 01       		.byte	0x1
 1757 034b F402     		.2byte	0x2f4
 1758 034d 8F000000 		.4byte	0x8f
 1759 0351 00000000 		.4byte	.LFB17
 1760 0355 C8000000 		.4byte	.LFE17-.LFB17
 1761 0359 01       		.uleb128 0x1
 1762 035a 9C       		.byte	0x9c
 1763 035b 8D030000 		.4byte	0x38d
 1764 035f 0F       		.uleb128 0xf
 1765 0360 EF020000 		.4byte	.LASF34
 1766 0364 01       		.byte	0x1
 1767 0365 F402     		.2byte	0x2f4
 1768 0367 83000000 		.4byte	0x83
 1769 036b 02       		.uleb128 0x2
 1770 036c 91       		.byte	0x91
 1771 036d 6C       		.sleb128 -20
 1772 036e 0F       		.uleb128 0xf
 1773 036f 33030000 		.4byte	.LASF50
 1774 0373 01       		.byte	0x1
 1775 0374 F402     		.2byte	0x2f4
 1776 0376 8F000000 		.4byte	0x8f
 1777 037a 02       		.uleb128 0x2
 1778 037b 91       		.byte	0x91
 1779 037c 6A       		.sleb128 -22
 1780 037d 10       		.uleb128 0x10
 1781 037e 9E010000 		.4byte	.LASF51
 1782 0382 01       		.byte	0x1
 1783 0383 F602     		.2byte	0x2f6
 1784 0385 8F000000 		.4byte	0x8f
 1785 0389 02       		.uleb128 0x2
 1786 038a 91       		.byte	0x91
 1787 038b 76       		.sleb128 -10
 1788 038c 00       		.byte	0
 1789 038d 11       		.uleb128 0x11
 1790 038e 83000000 		.4byte	.LASF52
 1791 0392 01       		.byte	0x1
 1792 0393 2A03     		.2byte	0x32a
 1793 0395 9B000000 		.4byte	0x9b
 1794 0399 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 48


 1795 039d B8000000 		.4byte	.LFE18-.LFB18
 1796 03a1 01       		.uleb128 0x1
 1797 03a2 9C       		.byte	0x9c
 1798 03a3 D5030000 		.4byte	0x3d5
 1799 03a7 0F       		.uleb128 0xf
 1800 03a8 EF020000 		.4byte	.LASF34
 1801 03ac 01       		.byte	0x1
 1802 03ad 2A03     		.2byte	0x32a
 1803 03af 83000000 		.4byte	0x83
 1804 03b3 02       		.uleb128 0x2
 1805 03b4 91       		.byte	0x91
 1806 03b5 64       		.sleb128 -28
 1807 03b6 0F       		.uleb128 0xf
 1808 03b7 33030000 		.4byte	.LASF50
 1809 03bb 01       		.byte	0x1
 1810 03bc 2A03     		.2byte	0x32a
 1811 03be 8F000000 		.4byte	0x8f
 1812 03c2 02       		.uleb128 0x2
 1813 03c3 91       		.byte	0x91
 1814 03c4 62       		.sleb128 -30
 1815 03c5 10       		.uleb128 0x10
 1816 03c6 23010000 		.4byte	.LASF53
 1817 03ca 01       		.byte	0x1
 1818 03cb 2C03     		.2byte	0x32c
 1819 03cd C1000000 		.4byte	0xc1
 1820 03d1 02       		.uleb128 0x2
 1821 03d2 91       		.byte	0x91
 1822 03d3 68       		.sleb128 -24
 1823 03d4 00       		.byte	0
 1824 03d5 11       		.uleb128 0x11
 1825 03d6 65030000 		.4byte	.LASF54
 1826 03da 01       		.byte	0x1
 1827 03db 5703     		.2byte	0x357
 1828 03dd A7000000 		.4byte	0xa7
 1829 03e1 00000000 		.4byte	.LFB19
 1830 03e5 A4000000 		.4byte	.LFE19-.LFB19
 1831 03e9 01       		.uleb128 0x1
 1832 03ea 9C       		.byte	0x9c
 1833 03eb 1D040000 		.4byte	0x41d
 1834 03ef 0F       		.uleb128 0xf
 1835 03f0 EF020000 		.4byte	.LASF34
 1836 03f4 01       		.byte	0x1
 1837 03f5 5703     		.2byte	0x357
 1838 03f7 83000000 		.4byte	0x83
 1839 03fb 02       		.uleb128 0x2
 1840 03fc 91       		.byte	0x91
 1841 03fd 64       		.sleb128 -28
 1842 03fe 0F       		.uleb128 0xf
 1843 03ff 33030000 		.4byte	.LASF50
 1844 0403 01       		.byte	0x1
 1845 0404 5703     		.2byte	0x357
 1846 0406 8F000000 		.4byte	0x8f
 1847 040a 02       		.uleb128 0x2
 1848 040b 91       		.byte	0x91
 1849 040c 62       		.sleb128 -30
 1850 040d 10       		.uleb128 0x10
 1851 040e 3C010000 		.4byte	.LASF55
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 49


 1852 0412 01       		.byte	0x1
 1853 0413 5903     		.2byte	0x359
 1854 0415 A7000000 		.4byte	0xa7
 1855 0419 02       		.uleb128 0x2
 1856 041a 91       		.byte	0x91
 1857 041b 6C       		.sleb128 -20
 1858 041c 00       		.byte	0
 1859 041d 09       		.uleb128 0x9
 1860 041e 83000000 		.4byte	0x83
 1861 0422 2D040000 		.4byte	0x42d
 1862 0426 0A       		.uleb128 0xa
 1863 0427 E5000000 		.4byte	0xe5
 1864 042b 02       		.byte	0x2
 1865 042c 00       		.byte	0
 1866 042d 08       		.uleb128 0x8
 1867 042e C5020000 		.4byte	.LASF56
 1868 0432 01       		.byte	0x1
 1869 0433 21       		.byte	0x21
 1870 0434 3E040000 		.4byte	0x43e
 1871 0438 05       		.uleb128 0x5
 1872 0439 03       		.byte	0x3
 1873 043a 00000000 		.4byte	Sensor_ADC_channelsConfig
 1874 043e 0B       		.uleb128 0xb
 1875 043f 1D040000 		.4byte	0x41d
 1876 0443 14       		.uleb128 0x14
 1877 0444 FB000000 		.4byte	.LASF57
 1878 0448 01       		.byte	0x1
 1879 0449 18       		.byte	0x18
 1880 044a 6B000000 		.4byte	0x6b
 1881 044e 05       		.uleb128 0x5
 1882 044f 03       		.byte	0x3
 1883 0450 00000000 		.4byte	Sensor_ADC_initVar
 1884 0454 09       		.uleb128 0x9
 1885 0455 8F000000 		.4byte	0x8f
 1886 0459 64040000 		.4byte	0x464
 1887 045d 0A       		.uleb128 0xa
 1888 045e E5000000 		.4byte	0xe5
 1889 0462 02       		.byte	0x2
 1890 0463 00       		.byte	0
 1891 0464 14       		.uleb128 0x14
 1892 0465 62000000 		.4byte	.LASF58
 1893 0469 01       		.byte	0x1
 1894 046a 19       		.byte	0x19
 1895 046b 75040000 		.4byte	0x475
 1896 046f 05       		.uleb128 0x5
 1897 0470 03       		.byte	0x3
 1898 0471 00000000 		.4byte	Sensor_ADC_offset
 1899 0475 05       		.uleb128 0x5
 1900 0476 54040000 		.4byte	0x454
 1901 047a 09       		.uleb128 0x9
 1902 047b 9B000000 		.4byte	0x9b
 1903 047f 8A040000 		.4byte	0x48a
 1904 0483 0A       		.uleb128 0xa
 1905 0484 E5000000 		.4byte	0xe5
 1906 0488 02       		.byte	0x2
 1907 0489 00       		.byte	0
 1908 048a 14       		.uleb128 0x14
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 50


 1909 048b 3D030000 		.4byte	.LASF59
 1910 048f 01       		.byte	0x1
 1911 0490 1A       		.byte	0x1a
 1912 0491 9B040000 		.4byte	0x49b
 1913 0495 05       		.uleb128 0x5
 1914 0496 03       		.byte	0x3
 1915 0497 00000000 		.4byte	Sensor_ADC_countsPer10Volt
 1916 049b 05       		.uleb128 0x5
 1917 049c 7A040000 		.4byte	0x47a
 1918 04a0 00       		.byte	0
 1919              		.section	.debug_abbrev,"",%progbits
 1920              	.Ldebug_abbrev0:
 1921 0000 01       		.uleb128 0x1
 1922 0001 11       		.uleb128 0x11
 1923 0002 01       		.byte	0x1
 1924 0003 25       		.uleb128 0x25
 1925 0004 0E       		.uleb128 0xe
 1926 0005 13       		.uleb128 0x13
 1927 0006 0B       		.uleb128 0xb
 1928 0007 03       		.uleb128 0x3
 1929 0008 0E       		.uleb128 0xe
 1930 0009 1B       		.uleb128 0x1b
 1931 000a 0E       		.uleb128 0xe
 1932 000b 55       		.uleb128 0x55
 1933 000c 17       		.uleb128 0x17
 1934 000d 11       		.uleb128 0x11
 1935 000e 01       		.uleb128 0x1
 1936 000f 10       		.uleb128 0x10
 1937 0010 17       		.uleb128 0x17
 1938 0011 00       		.byte	0
 1939 0012 00       		.byte	0
 1940 0013 02       		.uleb128 0x2
 1941 0014 24       		.uleb128 0x24
 1942 0015 00       		.byte	0
 1943 0016 0B       		.uleb128 0xb
 1944 0017 0B       		.uleb128 0xb
 1945 0018 3E       		.uleb128 0x3e
 1946 0019 0B       		.uleb128 0xb
 1947 001a 03       		.uleb128 0x3
 1948 001b 0E       		.uleb128 0xe
 1949 001c 00       		.byte	0
 1950 001d 00       		.byte	0
 1951 001e 03       		.uleb128 0x3
 1952 001f 24       		.uleb128 0x24
 1953 0020 00       		.byte	0
 1954 0021 0B       		.uleb128 0xb
 1955 0022 0B       		.uleb128 0xb
 1956 0023 3E       		.uleb128 0x3e
 1957 0024 0B       		.uleb128 0xb
 1958 0025 03       		.uleb128 0x3
 1959 0026 08       		.uleb128 0x8
 1960 0027 00       		.byte	0
 1961 0028 00       		.byte	0
 1962 0029 04       		.uleb128 0x4
 1963 002a 16       		.uleb128 0x16
 1964 002b 00       		.byte	0
 1965 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 51


 1966 002d 0E       		.uleb128 0xe
 1967 002e 3A       		.uleb128 0x3a
 1968 002f 0B       		.uleb128 0xb
 1969 0030 3B       		.uleb128 0x3b
 1970 0031 05       		.uleb128 0x5
 1971 0032 49       		.uleb128 0x49
 1972 0033 13       		.uleb128 0x13
 1973 0034 00       		.byte	0
 1974 0035 00       		.byte	0
 1975 0036 05       		.uleb128 0x5
 1976 0037 35       		.uleb128 0x35
 1977 0038 00       		.byte	0
 1978 0039 49       		.uleb128 0x49
 1979 003a 13       		.uleb128 0x13
 1980 003b 00       		.byte	0
 1981 003c 00       		.byte	0
 1982 003d 06       		.uleb128 0x6
 1983 003e 2E       		.uleb128 0x2e
 1984 003f 00       		.byte	0
 1985 0040 3F       		.uleb128 0x3f
 1986 0041 19       		.uleb128 0x19
 1987 0042 03       		.uleb128 0x3
 1988 0043 0E       		.uleb128 0xe
 1989 0044 3A       		.uleb128 0x3a
 1990 0045 0B       		.uleb128 0xb
 1991 0046 3B       		.uleb128 0x3b
 1992 0047 0B       		.uleb128 0xb
 1993 0048 27       		.uleb128 0x27
 1994 0049 19       		.uleb128 0x19
 1995 004a 11       		.uleb128 0x11
 1996 004b 01       		.uleb128 0x1
 1997 004c 12       		.uleb128 0x12
 1998 004d 06       		.uleb128 0x6
 1999 004e 40       		.uleb128 0x40
 2000 004f 18       		.uleb128 0x18
 2001 0050 9642     		.uleb128 0x2116
 2002 0052 19       		.uleb128 0x19
 2003 0053 00       		.byte	0
 2004 0054 00       		.byte	0
 2005 0055 07       		.uleb128 0x7
 2006 0056 2E       		.uleb128 0x2e
 2007 0057 01       		.byte	0x1
 2008 0058 3F       		.uleb128 0x3f
 2009 0059 19       		.uleb128 0x19
 2010 005a 03       		.uleb128 0x3
 2011 005b 0E       		.uleb128 0xe
 2012 005c 3A       		.uleb128 0x3a
 2013 005d 0B       		.uleb128 0xb
 2014 005e 3B       		.uleb128 0x3b
 2015 005f 0B       		.uleb128 0xb
 2016 0060 27       		.uleb128 0x27
 2017 0061 19       		.uleb128 0x19
 2018 0062 11       		.uleb128 0x11
 2019 0063 01       		.uleb128 0x1
 2020 0064 12       		.uleb128 0x12
 2021 0065 06       		.uleb128 0x6
 2022 0066 40       		.uleb128 0x40
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 52


 2023 0067 18       		.uleb128 0x18
 2024 0068 9642     		.uleb128 0x2116
 2025 006a 19       		.uleb128 0x19
 2026 006b 01       		.uleb128 0x1
 2027 006c 13       		.uleb128 0x13
 2028 006d 00       		.byte	0
 2029 006e 00       		.byte	0
 2030 006f 08       		.uleb128 0x8
 2031 0070 34       		.uleb128 0x34
 2032 0071 00       		.byte	0
 2033 0072 03       		.uleb128 0x3
 2034 0073 0E       		.uleb128 0xe
 2035 0074 3A       		.uleb128 0x3a
 2036 0075 0B       		.uleb128 0xb
 2037 0076 3B       		.uleb128 0x3b
 2038 0077 0B       		.uleb128 0xb
 2039 0078 49       		.uleb128 0x49
 2040 0079 13       		.uleb128 0x13
 2041 007a 02       		.uleb128 0x2
 2042 007b 18       		.uleb128 0x18
 2043 007c 00       		.byte	0
 2044 007d 00       		.byte	0
 2045 007e 09       		.uleb128 0x9
 2046 007f 01       		.uleb128 0x1
 2047 0080 01       		.byte	0x1
 2048 0081 49       		.uleb128 0x49
 2049 0082 13       		.uleb128 0x13
 2050 0083 01       		.uleb128 0x1
 2051 0084 13       		.uleb128 0x13
 2052 0085 00       		.byte	0
 2053 0086 00       		.byte	0
 2054 0087 0A       		.uleb128 0xa
 2055 0088 21       		.uleb128 0x21
 2056 0089 00       		.byte	0
 2057 008a 49       		.uleb128 0x49
 2058 008b 13       		.uleb128 0x13
 2059 008c 2F       		.uleb128 0x2f
 2060 008d 0B       		.uleb128 0xb
 2061 008e 00       		.byte	0
 2062 008f 00       		.byte	0
 2063 0090 0B       		.uleb128 0xb
 2064 0091 26       		.uleb128 0x26
 2065 0092 00       		.byte	0
 2066 0093 49       		.uleb128 0x49
 2067 0094 13       		.uleb128 0x13
 2068 0095 00       		.byte	0
 2069 0096 00       		.byte	0
 2070 0097 0C       		.uleb128 0xc
 2071 0098 2E       		.uleb128 0x2e
 2072 0099 00       		.byte	0
 2073 009a 3F       		.uleb128 0x3f
 2074 009b 19       		.uleb128 0x19
 2075 009c 03       		.uleb128 0x3
 2076 009d 0E       		.uleb128 0xe
 2077 009e 3A       		.uleb128 0x3a
 2078 009f 0B       		.uleb128 0xb
 2079 00a0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 53


 2080 00a1 05       		.uleb128 0x5
 2081 00a2 27       		.uleb128 0x27
 2082 00a3 19       		.uleb128 0x19
 2083 00a4 11       		.uleb128 0x11
 2084 00a5 01       		.uleb128 0x1
 2085 00a6 12       		.uleb128 0x12
 2086 00a7 06       		.uleb128 0x6
 2087 00a8 40       		.uleb128 0x40
 2088 00a9 18       		.uleb128 0x18
 2089 00aa 9642     		.uleb128 0x2116
 2090 00ac 19       		.uleb128 0x19
 2091 00ad 00       		.byte	0
 2092 00ae 00       		.byte	0
 2093 00af 0D       		.uleb128 0xd
 2094 00b0 2E       		.uleb128 0x2e
 2095 00b1 00       		.byte	0
 2096 00b2 3F       		.uleb128 0x3f
 2097 00b3 19       		.uleb128 0x19
 2098 00b4 03       		.uleb128 0x3
 2099 00b5 0E       		.uleb128 0xe
 2100 00b6 3A       		.uleb128 0x3a
 2101 00b7 0B       		.uleb128 0xb
 2102 00b8 3B       		.uleb128 0x3b
 2103 00b9 05       		.uleb128 0x5
 2104 00ba 27       		.uleb128 0x27
 2105 00bb 19       		.uleb128 0x19
 2106 00bc 11       		.uleb128 0x11
 2107 00bd 01       		.uleb128 0x1
 2108 00be 12       		.uleb128 0x12
 2109 00bf 06       		.uleb128 0x6
 2110 00c0 40       		.uleb128 0x40
 2111 00c1 18       		.uleb128 0x18
 2112 00c2 9742     		.uleb128 0x2117
 2113 00c4 19       		.uleb128 0x19
 2114 00c5 00       		.byte	0
 2115 00c6 00       		.byte	0
 2116 00c7 0E       		.uleb128 0xe
 2117 00c8 2E       		.uleb128 0x2e
 2118 00c9 01       		.byte	0x1
 2119 00ca 3F       		.uleb128 0x3f
 2120 00cb 19       		.uleb128 0x19
 2121 00cc 03       		.uleb128 0x3
 2122 00cd 0E       		.uleb128 0xe
 2123 00ce 3A       		.uleb128 0x3a
 2124 00cf 0B       		.uleb128 0xb
 2125 00d0 3B       		.uleb128 0x3b
 2126 00d1 05       		.uleb128 0x5
 2127 00d2 27       		.uleb128 0x27
 2128 00d3 19       		.uleb128 0x19
 2129 00d4 49       		.uleb128 0x49
 2130 00d5 13       		.uleb128 0x13
 2131 00d6 11       		.uleb128 0x11
 2132 00d7 01       		.uleb128 0x1
 2133 00d8 12       		.uleb128 0x12
 2134 00d9 06       		.uleb128 0x6
 2135 00da 40       		.uleb128 0x40
 2136 00db 18       		.uleb128 0x18
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 54


 2137 00dc 9742     		.uleb128 0x2117
 2138 00de 19       		.uleb128 0x19
 2139 00df 01       		.uleb128 0x1
 2140 00e0 13       		.uleb128 0x13
 2141 00e1 00       		.byte	0
 2142 00e2 00       		.byte	0
 2143 00e3 0F       		.uleb128 0xf
 2144 00e4 05       		.uleb128 0x5
 2145 00e5 00       		.byte	0
 2146 00e6 03       		.uleb128 0x3
 2147 00e7 0E       		.uleb128 0xe
 2148 00e8 3A       		.uleb128 0x3a
 2149 00e9 0B       		.uleb128 0xb
 2150 00ea 3B       		.uleb128 0x3b
 2151 00eb 05       		.uleb128 0x5
 2152 00ec 49       		.uleb128 0x49
 2153 00ed 13       		.uleb128 0x13
 2154 00ee 02       		.uleb128 0x2
 2155 00ef 18       		.uleb128 0x18
 2156 00f0 00       		.byte	0
 2157 00f1 00       		.byte	0
 2158 00f2 10       		.uleb128 0x10
 2159 00f3 34       		.uleb128 0x34
 2160 00f4 00       		.byte	0
 2161 00f5 03       		.uleb128 0x3
 2162 00f6 0E       		.uleb128 0xe
 2163 00f7 3A       		.uleb128 0x3a
 2164 00f8 0B       		.uleb128 0xb
 2165 00f9 3B       		.uleb128 0x3b
 2166 00fa 05       		.uleb128 0x5
 2167 00fb 49       		.uleb128 0x49
 2168 00fc 13       		.uleb128 0x13
 2169 00fd 02       		.uleb128 0x2
 2170 00fe 18       		.uleb128 0x18
 2171 00ff 00       		.byte	0
 2172 0100 00       		.byte	0
 2173 0101 11       		.uleb128 0x11
 2174 0102 2E       		.uleb128 0x2e
 2175 0103 01       		.byte	0x1
 2176 0104 3F       		.uleb128 0x3f
 2177 0105 19       		.uleb128 0x19
 2178 0106 03       		.uleb128 0x3
 2179 0107 0E       		.uleb128 0xe
 2180 0108 3A       		.uleb128 0x3a
 2181 0109 0B       		.uleb128 0xb
 2182 010a 3B       		.uleb128 0x3b
 2183 010b 05       		.uleb128 0x5
 2184 010c 27       		.uleb128 0x27
 2185 010d 19       		.uleb128 0x19
 2186 010e 49       		.uleb128 0x49
 2187 010f 13       		.uleb128 0x13
 2188 0110 11       		.uleb128 0x11
 2189 0111 01       		.uleb128 0x1
 2190 0112 12       		.uleb128 0x12
 2191 0113 06       		.uleb128 0x6
 2192 0114 40       		.uleb128 0x40
 2193 0115 18       		.uleb128 0x18
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 55


 2194 0116 9642     		.uleb128 0x2116
 2195 0118 19       		.uleb128 0x19
 2196 0119 01       		.uleb128 0x1
 2197 011a 13       		.uleb128 0x13
 2198 011b 00       		.byte	0
 2199 011c 00       		.byte	0
 2200 011d 12       		.uleb128 0x12
 2201 011e 2E       		.uleb128 0x2e
 2202 011f 01       		.byte	0x1
 2203 0120 3F       		.uleb128 0x3f
 2204 0121 19       		.uleb128 0x19
 2205 0122 03       		.uleb128 0x3
 2206 0123 0E       		.uleb128 0xe
 2207 0124 3A       		.uleb128 0x3a
 2208 0125 0B       		.uleb128 0xb
 2209 0126 3B       		.uleb128 0x3b
 2210 0127 05       		.uleb128 0x5
 2211 0128 27       		.uleb128 0x27
 2212 0129 19       		.uleb128 0x19
 2213 012a 11       		.uleb128 0x11
 2214 012b 01       		.uleb128 0x1
 2215 012c 12       		.uleb128 0x12
 2216 012d 06       		.uleb128 0x6
 2217 012e 40       		.uleb128 0x40
 2218 012f 18       		.uleb128 0x18
 2219 0130 9742     		.uleb128 0x2117
 2220 0132 19       		.uleb128 0x19
 2221 0133 01       		.uleb128 0x1
 2222 0134 13       		.uleb128 0x13
 2223 0135 00       		.byte	0
 2224 0136 00       		.byte	0
 2225 0137 13       		.uleb128 0x13
 2226 0138 2E       		.uleb128 0x2e
 2227 0139 01       		.byte	0x1
 2228 013a 3F       		.uleb128 0x3f
 2229 013b 19       		.uleb128 0x19
 2230 013c 03       		.uleb128 0x3
 2231 013d 0E       		.uleb128 0xe
 2232 013e 3A       		.uleb128 0x3a
 2233 013f 0B       		.uleb128 0xb
 2234 0140 3B       		.uleb128 0x3b
 2235 0141 05       		.uleb128 0x5
 2236 0142 27       		.uleb128 0x27
 2237 0143 19       		.uleb128 0x19
 2238 0144 11       		.uleb128 0x11
 2239 0145 01       		.uleb128 0x1
 2240 0146 12       		.uleb128 0x12
 2241 0147 06       		.uleb128 0x6
 2242 0148 40       		.uleb128 0x40
 2243 0149 18       		.uleb128 0x18
 2244 014a 9642     		.uleb128 0x2116
 2245 014c 19       		.uleb128 0x19
 2246 014d 01       		.uleb128 0x1
 2247 014e 13       		.uleb128 0x13
 2248 014f 00       		.byte	0
 2249 0150 00       		.byte	0
 2250 0151 14       		.uleb128 0x14
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 56


 2251 0152 34       		.uleb128 0x34
 2252 0153 00       		.byte	0
 2253 0154 03       		.uleb128 0x3
 2254 0155 0E       		.uleb128 0xe
 2255 0156 3A       		.uleb128 0x3a
 2256 0157 0B       		.uleb128 0xb
 2257 0158 3B       		.uleb128 0x3b
 2258 0159 0B       		.uleb128 0xb
 2259 015a 49       		.uleb128 0x49
 2260 015b 13       		.uleb128 0x13
 2261 015c 3F       		.uleb128 0x3f
 2262 015d 19       		.uleb128 0x19
 2263 015e 02       		.uleb128 0x2
 2264 015f 18       		.uleb128 0x18
 2265 0160 00       		.byte	0
 2266 0161 00       		.byte	0
 2267 0162 00       		.byte	0
 2268              		.section	.debug_aranges,"",%progbits
 2269 0000 A4000000 		.4byte	0xa4
 2270 0004 0200     		.2byte	0x2
 2271 0006 00000000 		.4byte	.Ldebug_info0
 2272 000a 04       		.byte	0x4
 2273 000b 00       		.byte	0
 2274 000c 0000     		.2byte	0
 2275 000e 0000     		.2byte	0
 2276 0010 00000000 		.4byte	.LFB2
 2277 0014 24000000 		.4byte	.LFE2-.LFB2
 2278 0018 00000000 		.4byte	.LFB3
 2279 001c 18020000 		.4byte	.LFE3-.LFB3
 2280 0020 00000000 		.4byte	.LFB4
 2281 0024 38000000 		.4byte	.LFE4-.LFB4
 2282 0028 00000000 		.4byte	.LFB5
 2283 002c 18000000 		.4byte	.LFE5-.LFB5
 2284 0030 00000000 		.4byte	.LFB6
 2285 0034 1C000000 		.4byte	.LFE6-.LFB6
 2286 0038 00000000 		.4byte	.LFB7
 2287 003c 1C000000 		.4byte	.LFE7-.LFB7
 2288 0040 00000000 		.4byte	.LFB8
 2289 0044 48000000 		.4byte	.LFE8-.LFB8
 2290 0048 00000000 		.4byte	.LFB9
 2291 004c 44000000 		.4byte	.LFE9-.LFB9
 2292 0050 00000000 		.4byte	.LFB10
 2293 0054 1C000000 		.4byte	.LFE10-.LFB10
 2294 0058 00000000 		.4byte	.LFB11
 2295 005c 30000000 		.4byte	.LFE11-.LFB11
 2296 0060 00000000 		.4byte	.LFB12
 2297 0064 2C000000 		.4byte	.LFE12-.LFB12
 2298 0068 00000000 		.4byte	.LFB13
 2299 006c 1C000000 		.4byte	.LFE13-.LFB13
 2300 0070 00000000 		.4byte	.LFB14
 2301 0074 1C000000 		.4byte	.LFE14-.LFB14
 2302 0078 00000000 		.4byte	.LFB15
 2303 007c 30000000 		.4byte	.LFE15-.LFB15
 2304 0080 00000000 		.4byte	.LFB16
 2305 0084 2C000000 		.4byte	.LFE16-.LFB16
 2306 0088 00000000 		.4byte	.LFB17
 2307 008c C8000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 57


 2308 0090 00000000 		.4byte	.LFB18
 2309 0094 B8000000 		.4byte	.LFE18-.LFB18
 2310 0098 00000000 		.4byte	.LFB19
 2311 009c A4000000 		.4byte	.LFE19-.LFB19
 2312 00a0 00000000 		.4byte	0
 2313 00a4 00000000 		.4byte	0
 2314              		.section	.debug_ranges,"",%progbits
 2315              	.Ldebug_ranges0:
 2316 0000 00000000 		.4byte	.LFB2
 2317 0004 24000000 		.4byte	.LFE2
 2318 0008 00000000 		.4byte	.LFB3
 2319 000c 18020000 		.4byte	.LFE3
 2320 0010 00000000 		.4byte	.LFB4
 2321 0014 38000000 		.4byte	.LFE4
 2322 0018 00000000 		.4byte	.LFB5
 2323 001c 18000000 		.4byte	.LFE5
 2324 0020 00000000 		.4byte	.LFB6
 2325 0024 1C000000 		.4byte	.LFE6
 2326 0028 00000000 		.4byte	.LFB7
 2327 002c 1C000000 		.4byte	.LFE7
 2328 0030 00000000 		.4byte	.LFB8
 2329 0034 48000000 		.4byte	.LFE8
 2330 0038 00000000 		.4byte	.LFB9
 2331 003c 44000000 		.4byte	.LFE9
 2332 0040 00000000 		.4byte	.LFB10
 2333 0044 1C000000 		.4byte	.LFE10
 2334 0048 00000000 		.4byte	.LFB11
 2335 004c 30000000 		.4byte	.LFE11
 2336 0050 00000000 		.4byte	.LFB12
 2337 0054 2C000000 		.4byte	.LFE12
 2338 0058 00000000 		.4byte	.LFB13
 2339 005c 1C000000 		.4byte	.LFE13
 2340 0060 00000000 		.4byte	.LFB14
 2341 0064 1C000000 		.4byte	.LFE14
 2342 0068 00000000 		.4byte	.LFB15
 2343 006c 30000000 		.4byte	.LFE15
 2344 0070 00000000 		.4byte	.LFB16
 2345 0074 2C000000 		.4byte	.LFE16
 2346 0078 00000000 		.4byte	.LFB17
 2347 007c C8000000 		.4byte	.LFE17
 2348 0080 00000000 		.4byte	.LFB18
 2349 0084 B8000000 		.4byte	.LFE18
 2350 0088 00000000 		.4byte	.LFB19
 2351 008c A4000000 		.4byte	.LFE19
 2352 0090 00000000 		.4byte	0
 2353 0094 00000000 		.4byte	0
 2354              		.section	.debug_line,"",%progbits
 2355              	.Ldebug_line0:
 2356 0000 A5020000 		.section	.debug_str,"MS",%progbits,1
 2356      02004900 
 2356      00000201 
 2356      FB0E0D00 
 2356      01010101 
 2357              	.LASF10:
 2358 0000 75696E74 		.ascii	"uint16\000"
 2358      313600
 2359              	.LASF48:
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 58


 2360 0007 61646347 		.ascii	"adcGain\000"
 2360      61696E00 
 2361              	.LASF23:
 2362 000f 636F756E 		.ascii	"counts\000"
 2362      747300
 2363              	.LASF7:
 2364 0016 6C6F6E67 		.ascii	"long long unsigned int\000"
 2364      206C6F6E 
 2364      6720756E 
 2364      7369676E 
 2364      65642069 
 2365              	.LASF24:
 2366 002d 53656E73 		.ascii	"Sensor_ADC_InputsPlacement\000"
 2366      6F725F41 
 2366      44435F49 
 2366      6E707574 
 2366      73506C61 
 2367              	.LASF6:
 2368 0048 6C6F6E67 		.ascii	"long long int\000"
 2368      206C6F6E 
 2368      6720696E 
 2368      7400
 2369              	.LASF0:
 2370 0056 7369676E 		.ascii	"signed char\000"
 2370      65642063 
 2370      68617200 
 2371              	.LASF58:
 2372 0062 53656E73 		.ascii	"Sensor_ADC_offset\000"
 2372      6F725F41 
 2372      44435F6F 
 2372      66667365 
 2372      7400
 2373              	.LASF13:
 2374 0074 696E7433 		.ascii	"int32\000"
 2374      3200
 2375              	.LASF4:
 2376 007a 6C6F6E67 		.ascii	"long int\000"
 2376      20696E74 
 2376      00
 2377              	.LASF52:
 2378 0083 53656E73 		.ascii	"Sensor_ADC_CountsTo_uVolts\000"
 2378      6F725F41 
 2378      44435F43 
 2378      6F756E74 
 2378      73546F5F 
 2379              	.LASF45:
 2380 009e 53656E73 		.ascii	"Sensor_ADC_SetOffset\000"
 2380      6F725F41 
 2380      44435F53 
 2380      65744F66 
 2380      66736574 
 2381              	.LASF9:
 2382 00b3 75696E74 		.ascii	"uint8\000"
 2382      3800
 2383              	.LASF16:
 2384 00b9 646F7562 		.ascii	"double\000"
 2384      6C6500
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 59


 2385              	.LASF32:
 2386 00c0 53656E73 		.ascii	"Sensor_ADC_GetResult16\000"
 2386      6F725F41 
 2386      44435F47 
 2386      65745265 
 2386      73756C74 
 2387              	.LASF11:
 2388 00d7 75696E74 		.ascii	"uint32\000"
 2388      333200
 2389              	.LASF43:
 2390 00de 53656E73 		.ascii	"Sensor_ADC_SetLimitMask\000"
 2390      6F725F41 
 2390      44435F53 
 2390      65744C69 
 2390      6D69744D 
 2391              	.LASF38:
 2392 00f6 6D61736B 		.ascii	"mask\000"
 2392      00
 2393              	.LASF57:
 2394 00fb 53656E73 		.ascii	"Sensor_ADC_initVar\000"
 2394      6F725F41 
 2394      44435F69 
 2394      6E697456 
 2394      617200
 2395              	.LASF33:
 2396 010e 7265744D 		.ascii	"retMode\000"
 2396      6F646500 
 2397              	.LASF8:
 2398 0116 756E7369 		.ascii	"unsigned int\000"
 2398      676E6564 
 2398      20696E74 
 2398      00
 2399              	.LASF53:
 2400 0123 75566F6C 		.ascii	"uVolts\000"
 2400      747300
 2401              	.LASF5:
 2402 012a 6C6F6E67 		.ascii	"long unsigned int\000"
 2402      20756E73 
 2402      69676E65 
 2402      6420696E 
 2402      7400
 2403              	.LASF55:
 2404 013c 766F6C74 		.ascii	"volts\000"
 2404      7300
 2405              	.LASF22:
 2406 0142 746D7052 		.ascii	"tmpRegVal\000"
 2406      65675661 
 2406      6C00
 2407              	.LASF29:
 2408 014c 53656E73 		.ascii	"Sensor_ADC_StopConvert\000"
 2408      6F725F41 
 2408      44435F53 
 2408      746F7043 
 2408      6F6E7665 
 2409              	.LASF27:
 2410 0163 53656E73 		.ascii	"Sensor_ADC_Stop\000"
 2410      6F725F41 
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 60


 2410      44435F53 
 2410      746F7000 
 2411              	.LASF28:
 2412 0173 53656E73 		.ascii	"Sensor_ADC_StartConvert\000"
 2412      6F725F41 
 2412      44435F53 
 2412      74617274 
 2412      436F6E76 
 2413              	.LASF3:
 2414 018b 73686F72 		.ascii	"short unsigned int\000"
 2414      7420756E 
 2414      7369676E 
 2414      65642069 
 2414      6E7400
 2415              	.LASF51:
 2416 019e 6D566F6C 		.ascii	"mVolts\000"
 2416      747300
 2417              	.LASF19:
 2418 01a5 72656733 		.ascii	"reg32\000"
 2418      3200
 2419              	.LASF41:
 2420 01ab 53656E73 		.ascii	"Sensor_ADC_SetHighLimit\000"
 2420      6F725F41 
 2420      44435F53 
 2420      65744869 
 2420      67684C69 
 2421              	.LASF14:
 2422 01c3 666C6F61 		.ascii	"float32\000"
 2422      74333200 
 2423              	.LASF20:
 2424 01cb 73697A65 		.ascii	"sizetype\000"
 2424      74797065 
 2424      00
 2425              	.LASF40:
 2426 01d4 6C6F774C 		.ascii	"lowLimit\000"
 2426      696D6974 
 2426      00
 2427              	.LASF31:
 2428 01dd 53656E73 		.ascii	"Sensor_ADC_IsEndConversion\000"
 2428      6F725F41 
 2428      44435F49 
 2428      73456E64 
 2428      436F6E76 
 2429              	.LASF62:
 2430 01f8 443A5C57 		.ascii	"D:\\Work\\Projects\\Accelerometer_Controlled_Car\\P"
 2430      6F726B5C 
 2430      50726F6A 
 2430      65637473 
 2430      5C416363 
 2431 0227 536F435F 		.ascii	"SoC_4_BLE_ACCELEROMETER.cydsn\000"
 2431      345F424C 
 2431      455F4143 
 2431      43454C45 
 2431      524F4D45 
 2432              	.LASF37:
 2433 0245 53656E73 		.ascii	"Sensor_ADC_SetChanMask\000"
 2433      6F725F41 
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 61


 2433      44435F53 
 2433      65744368 
 2433      616E4D61 
 2434              	.LASF17:
 2435 025c 696E7436 		.ascii	"int64\000"
 2435      3400
 2436              	.LASF15:
 2437 0262 666C6F61 		.ascii	"float\000"
 2437      7400
 2438              	.LASF47:
 2439 0268 53656E73 		.ascii	"Sensor_ADC_SetGain\000"
 2439      6F725F41 
 2439      44435F53 
 2439      65744761 
 2439      696E00
 2440              	.LASF39:
 2441 027b 53656E73 		.ascii	"Sensor_ADC_SetLowLimit\000"
 2441      6F725F41 
 2441      44435F53 
 2441      65744C6F 
 2441      774C696D 
 2442              	.LASF42:
 2443 0292 68696768 		.ascii	"highLimit\000"
 2443      4C696D69 
 2443      7400
 2444              	.LASF49:
 2445 029c 53656E73 		.ascii	"Sensor_ADC_CountsTo_mVolts\000"
 2445      6F725F41 
 2445      44435F43 
 2445      6F756E74 
 2445      73546F5F 
 2446              	.LASF1:
 2447 02b7 756E7369 		.ascii	"unsigned char\000"
 2447      676E6564 
 2447      20636861 
 2447      7200
 2448              	.LASF56:
 2449 02c5 53656E73 		.ascii	"Sensor_ADC_channelsConfig\000"
 2449      6F725F41 
 2449      44435F63 
 2449      68616E6E 
 2449      656C7343 
 2450              	.LASF2:
 2451 02df 73686F72 		.ascii	"short int\000"
 2451      7420696E 
 2451      7400
 2452              	.LASF21:
 2453 02e9 63684E75 		.ascii	"chNum\000"
 2453      6D00
 2454              	.LASF34:
 2455 02ef 6368616E 		.ascii	"chan\000"
 2455      00
 2456              	.LASF18:
 2457 02f4 63686172 		.ascii	"char\000"
 2457      00
 2458              	.LASF26:
 2459 02f9 53656E73 		.ascii	"Sensor_ADC_Enable\000"
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 62


 2459      6F725F41 
 2459      44435F45 
 2459      6E61626C 
 2459      6500
 2460              	.LASF36:
 2461 030b 53656E73 		.ascii	"Sensor_ADC_Init\000"
 2461      6F725F41 
 2461      44435F49 
 2461      6E697400 
 2462              	.LASF46:
 2463 031b 6F666673 		.ascii	"offset\000"
 2463      657400
 2464              	.LASF25:
 2465 0322 53656E73 		.ascii	"Sensor_ADC_Start\000"
 2465      6F725F41 
 2465      44435F53 
 2465      74617274 
 2465      00
 2466              	.LASF50:
 2467 0333 61646343 		.ascii	"adcCounts\000"
 2467      6F756E74 
 2467      7300
 2468              	.LASF59:
 2469 033d 53656E73 		.ascii	"Sensor_ADC_countsPer10Volt\000"
 2469      6F725F41 
 2469      44435F63 
 2469      6F756E74 
 2469      73506572 
 2470              	.LASF30:
 2471 0358 73746174 		.ascii	"status\000"
 2471      757300
 2472              	.LASF12:
 2473 035f 696E7431 		.ascii	"int16\000"
 2473      3600
 2474              	.LASF54:
 2475 0365 53656E73 		.ascii	"Sensor_ADC_CountsTo_Volts\000"
 2475      6F725F41 
 2475      44435F43 
 2475      6F756E74 
 2475      73546F5F 
 2476              	.LASF60:
 2477 037f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2477      4320342E 
 2477      392E3320 
 2477      32303135 
 2477      30333033 
 2478 03b2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2478      20726576 
 2478      6973696F 
 2478      6E203232 
 2478      31323230 
 2479 03e5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2479      66756E63 
 2479      74696F6E 
 2479      2D736563 
 2479      74696F6E 
 2480              	.LASF61:
ARM GAS  C:\Users\Midori\AppData\Local\Temp\ccoVQSDh.s 			page 63


 2481 040d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Sensor_ADC.c\000"
 2481      6E657261 
 2481      7465645F 
 2481      536F7572 
 2481      63655C50 
 2482              	.LASF44:
 2483 0433 53656E73 		.ascii	"Sensor_ADC_SetSatMask\000"
 2483      6F725F41 
 2483      44435F53 
 2483      65745361 
 2483      744D6173 
 2484              	.LASF35:
 2485 0449 72657375 		.ascii	"result\000"
 2485      6C7400
 2486              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
